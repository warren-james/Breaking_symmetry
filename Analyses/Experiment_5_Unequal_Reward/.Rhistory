# Accuracy data
# Standing positions
# Total earnings
#### Library ####
library(tidyverse)
# library(rstan)
library(gridExtra)
library(forcats)
library(ggthemes)
#### Constants ####
slab_size <- 0.46
#### load in data ####
load("scratch/data/df_part2")
load("scratch/data/df_part1")
# relevel factors
#### Summaries and Plotting ####
# proportion of equal vs unequal
plt_prop_gamble_types <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Gamble_Type) %>%
summarise(n = n()) %>%
ggplot(aes(Participant, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
theme_bw() +
scale_y_discrete(limits = seq(0,12,2)) +
theme(legend.position = "bottom")
plt_prop_gamble_types$labels$y <- "No. of each split"
plt_prop_gamble_types$labels$fill <- "Split"
plt_prop_gamble_types
# probably want to save these as well
# add that in later
# choices made
plt_standing_pos <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
ggplot(aes(HoopDelta, Norm_Dist, colour = Gamble_Type)) +
scale_colour_ptol() +
geom_jitter() +
theme_bw() +
facet_wrap(~Participant, ncol = 4) +
theme(legend.position = "bottom",
strip.text.x = element_text(margin = margin(0.01,0,0.01,0, "mm")))
plt_standing_pos$labels$x <- "Delta (Metres)"
plt_standing_pos$labels$y <- "Nomalised Standing Position"
plt_standing_pos$labels$colour <- "Split"
plt_standing_pos
# plot together
grid.arrange(plt_prop_gamble_types,plt_standing_pos, ncol = 2)
plt_together <- arrangeGrob(plt_prop_gamble_types, plt_standing_pos, ncol = 2)
# save this
ggsave(file = "../../Figures/Experiment_5_Unequal_Reward/prop_and_position.png", plt_together)
#### Proportion over distance ####
plt_prop_dist <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Gamble_Type, HoopDelta) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
HoopDelta,
fill = list(n = 0)) %>%
spread(Gamble_Type, n) %>%
filter(Equal + Unequal > 0) %>%
gather(Equal:Unequal,
key = Gamble_Type,
value = n) %>%
mutate(freq = n/3) %>%
filter(Gamble_Type != "Equal") %>%
ggplot(aes(HoopDelta*slab_size, freq)) +
geom_line() +
theme_bw() +
facet_wrap(~Participant) +
theme(strip.text.x = element_text(margin = margin(0.01,
0,
0.01,
0,
"mm")))
plt_prop_dist$labels$x <- "Delta (Metres)"
plt_prop_dist$labels$y <- "Frequency of Unequal Splits"
plt_prop_dist
# just plot everything with equal and unequal gamebles
plt_everything <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
filter(Norm_Dist < 1.001) %>%
ggplot(aes(HoopDelta, Norm_Dist, colour = Gamble_Type)) +
scale_colour_ptol() +
geom_jitter() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE) +
theme_bw() +
theme(legend.position = "bottom")
plt_everything$labels$x <- "Delta (Metres)"
plt_everything$labels$y <- "Normalised Standing Position"
plt_everything
# With trial info?
plt_trials <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
unite(Colour_Gamble, c(Colour, Gamble_Type)) %>%
mutate(Colour_Gamble = fct_reorder(Colour_Gamble, HoopDelta)) %>%
ggplot(aes(Trial, Norm_Dist, colour = Colour_Gamble, shape = Colour_Gamble)) +
geom_point() +
theme_bw() +
scale_color_manual(name = "Gamble type and Distance",
values = rep(c("red", "yellow", "blue", "green"), each = 2)) +
scale_shape_manual(name = "Gamble type and Distance",
values = rep(c(15,17), 4)) +
facet_wrap(~Participant)
plt_trials$labels$y <- "Normalise Standing Position"
plt_trials
plt_everything
plt_prop_dist
plt_prop_gamble_types
plt_standing_pos
plt_together
grid.arrange(plt_prop_gamble_types,plt_standing_pos, ncol = 2)
#### Gambling Study - Doing some analysis ####
# Big aim:
# Make a STAN model of standing positiont for each person
# and look for difference in standing position by Delta and gamble type
# Could also maybe use a constant value of prop Unequal gambles?
#### Libraries ####
library(tidyverse)
library(rstan)
library(brms)
#### Load data ####
load("scratch/data/df_part2")
load("scratch/data/df_part1")
#### get accuracy cuvre data ####
# setup empty frame
acc_dat <- data.frame(Participant = character(),
HoopDelta = numeric(),
Est_Accuracy = numeric())
# separations we want
separations <- c(0:30)
# run loop
for(P in levels(df_part1$Participant)) {
# get subset
ss <- df_part1[df_part1$Participant == P,]
# run glm for each participant
m <- glm(data = ss,
Accuracy ~ Slab,
family = binomial)
# get predictions
p <- predict(m, data.frame(Slab = separations), type = "response")
p <- as.numeric(p)
# add into data frame
acc_dat <- rbind(acc_dat, data.frame(Participant = P,
HoopDelta = separations,
Est_Accuracy = p))
}
#### sort data for model ####
# add in accuracy data to df_part2
df_part2 <- merge(df_part2, acc_dat)
# Scale Delta so 0 is closest hoop and 1 is farthest
# This might make the scaling weird though?
# Could make this scale based on estimated accuracy for that target?
# remove any norm_dist > 1
# Also, Norm_dist needs to be offset so 0<Norm_Dist<1
model_data <- df_part2 %>%
group_by(Participant) %>%
mutate(max_delta = max(HoopDelta),
Norm_Delta = HoopDelta/max_delta,
Unequal = as.numeric(as.factor(Gamble_Type))-1) %>%
filter(Norm_Dist <= 1) %>%
mutate(Norm_Dist = (Norm_Dist + 1e-4)/(1+ 2e-4)) %>%
select(Participant, Norm_Delta, Est_Accuracy, Gamble_Type, Norm_Dist, Unequal) %>%
mutate(med_dist = median(Norm_Delta),
dist_type = ifelse(Norm_Delta > med_dist, "far", "close")) %>%
select(-med_dist)
# deselect med_dist
model_data <- model_data %>%
select(-med_dist)
# save this
save(model_data, file = "scratch/data/model_data")
#### Models ####
#### m1 - Norm_Dist ~ Norm_Delta ####
# setup stan_df
stan_df <- list(
N = nrow(model_data),
Norm_Dist = model_data$Norm_Dist,
Delta = model_data$Norm_Delta
)
# run model
# this model is really bad at the moment... need to sort out how to actually do a
# beta distribution in stan...
m1 <- stan(
file = "scratch/models/m1.stan",
data = stan_df,
chains = 1,
warmup = 1000,
iter = 2000,
refresh = 100
)
summary(m1)
plt_trials
head(df_part2)
df_part2 %>%
group_by(participant) %>%
mutate(stan_dist = HoopDelta/max(HoopDelta))
df_part2 %>%
group_by(Participant) %>%
mutate(stan_dist = HoopDelta/max(HoopDelta))
df_part2 %>%
group_by(Participant) %>%
mutate(stan_dist = HoopDelta/max(HoopDelta))
plt_dist_prop <- df_part2 %>%
group_by(Participant) %>%
mutate(stan_dist = HoopDelta/max(HoopDelta))
unique(plt_dist_prop$stan_dist)
plt_dist_prop <- df_part2 %>%
group_by(Participant) %>%
mutate(stan_dist = as.factor(HoopDelta))
warnings()
#### Proportion over distance ####
plt_dist_prop <- df_part2 %>%
group_by(Participant) %>%
mutate(stan_dist = as.factor(HoopDelta),
stan_dist = as.numeric(stan_dist))
unique(plt_dist_prop$stan_dist)
plt_dist_prop <- df_part2 %>%
group_by(Participant) %>%
mutate(stan_dist = as.factor(HoopDelta))
View(plt_dist_prop)
head(df_part2)
plt_dist_prop <- df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n())
head(plt_dist_prop)
plt_dist_prop <- df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
HoopDelta,
fill = list(n = 0))
plt_dist_prop <- df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0))
head(plt_dist_prop)
plt_prop_dist
df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
ggplot(aes(Participant, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
theme_bw() +
scale_y_discrete(limits = seq(0,12,2))
df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
theme_bw() +
scale_y_discrete(limits = seq(0,12,2)) +
facet_wrap(~Participant)
plt_dist_prop <- df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
theme_bw() +
scale_y_discrete(limits = seq(0,12,2)) +
facet_wrap(~Participant)
plt_dist_prop
plt_dist_prop <- df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
theme_bw() +
facet_wrap(~Participant)
plt_dist_prop
df_part2 %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_dist_prop <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0)) %>%
fct_relevel(Colour, "R", "Y", "B", "G") %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
str(df_part2)
plt_dist_prop <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0))
fct_relevel(plt_dist_prop$Colour, "R", "Y", "B", "G")
plt_dist_prop <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0))
# reorder Colour Factor
fct_relevel(plt_dist_prop$Colour, "R", "Y", "B", "G")
# make plot
plt_dist_prop %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_dist_prop <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0))
# reorder Colour Factor
plt_dist_prop$Colour <- fct_relevel(plt_dist_prop$Colour, "R", "Y", "B", "G")
# make plot
plt_dist_prop %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
ggsave(file = "../../Figures/Experiment_5_Unequal_Reward/Prop_gambles_dist.png")
plt_trials <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
unite(Colour_Gamble, c(Colour, Gamble_Type)) %>%
mutate(Colour_Gamble = fct_reorder(Colour_Gamble, HoopDelta)) %>%
ggplot(aes(Trial, Norm_Dist, colour = Colour_Gamble, shape = Colour_Gamble)) +
geom_point() +
theme_bw() +
scale_color_manual(name = "Gamble type and Distance",
values = rep(c("red", "yellow", "blue", "green"), each = 2)) +
scale_shape_manual(name = "Gamble type and Distance",
values = rep(c(15,17), 4)) +
facet_wrap(~Participant)
plt_trials$labels$y <- "Normalise Standing Position"
plt_trials
ggsave(file = "../../Figures/Experiment_5_Unequal_Reward/Plot_each_trial.png")
plt_dist_prop <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0))
# reorder Colour Factor
plt_dist_prop$Colour <- fct_relevel(plt_dist_prop$Colour, "R", "Y", "B", "G")
# make plot
plt_dist_prop %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_dist_prop <- plt_dist_prop %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_dist_prop <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
group_by(Participant, Colour, Gamble_Type) %>%
summarise(n = n()) %>%
mutate(n = n/3) %>%
ungroup() %>%
complete(Participant,
Gamble_Type,
Colour,
fill = list(n = 0))
# reorder Colour Factor
plt_dist_prop$Colour <- fct_relevel(plt_dist_prop$Colour, "R", "Y", "B", "G")
# make plot
plt_dist_prop <- plt_dist_prop %>%
ggplot(aes(Colour, n, fill = Gamble_Type)) +
scale_fill_ptol() +
geom_bar(stat = "identity", width = 0.5) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_dist_prop$labels$y <- ""
plt_dist_prop
ggsave(file = "../../Figures/Experiment_5_Unequal_Reward/Prop_gambles_dist.png")
plt_trials <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
unite(Colour_Gamble, c(Colour, Gamble_Type)) %>%
mutate(Colour_Gamble = fct_reorder(Colour_Gamble, HoopDelta)) %>%
ggplot(aes(Trial, Norm_Dist, colour = Colour_Gamble, shape = Colour_Gamble)) +
geom_point() +
theme_bw() +
scale_color_manual(name = "Gamble type and Distance",
values = rep(c("red", "yellow", "blue", "green"), each = 2)) +
scale_shape_manual(name = "Gamble type and Distance",
values = rep(c(15,17), 4)) +
scale_x_discrete(breaks = c(2,4,6,8,12)) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_trials$labels$y <- "Normalise Standing Position"
plt_trials
plt_trials <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
unite(Colour_Gamble, c(Colour, Gamble_Type)) %>%
mutate(Colour_Gamble = fct_reorder(Colour_Gamble, HoopDelta)) %>%
ggplot(aes(Trial, Norm_Dist, colour = Colour_Gamble, shape = Colour_Gamble)) +
geom_point() +
theme_bw() +
scale_color_manual(name = "Gamble type and Distance",
values = rep(c("red", "yellow", "blue", "green"), each = 2)) +
scale_shape_manual(name = "Gamble type and Distance",
values = rep(c(15,17), 4)) +
scale_x_continuous(breaks = c(2,4,6,8,12)) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_trials$labels$y <- "Normalise Standing Position"
plt_trials
plt_trials <- df_part2 %>%
mutate(Participant = as.factor(as.numeric(Participant))) %>%
unite(Colour_Gamble, c(Colour, Gamble_Type)) %>%
mutate(Colour_Gamble = fct_reorder(Colour_Gamble, HoopDelta)) %>%
ggplot(aes(Trial, Norm_Dist, colour = Colour_Gamble, shape = Colour_Gamble)) +
geom_point() +
theme_bw() +
scale_color_manual(name = "Gamble type and Distance",
values = rep(c("red", "yellow", "blue", "green"), each = 2)) +
scale_shape_manual(name = "Gamble type and Distance",
values = rep(c(15,17), 4)) +
scale_x_continuous(breaks = c(2,4,6,8,10,12)) +
see::theme_lucid() +
facet_wrap(~Participant)
plt_trials$labels$y <- "Normalised Standing Position"
plt_trials
ggsave(file = "../../Figures/Experiment_5_Unequal_Reward/Plot_each_trial.png")
