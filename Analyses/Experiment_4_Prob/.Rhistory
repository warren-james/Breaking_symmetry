2^-2
4^-2
10^-2
10/10
10/10^2
10*-(10^2)
head(acc_sep)
View(s_dist)
head(acc_sep)
acc_ml <- acc_sep %>%
mutate(ML_dist = separation,
ML_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_c <- acc_sep
acc_ml <- acc_sep %>%
mutate(ML_dist = separation,
ML_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_ll <- acc_sep %>%
mutate(LL_dist = separation,
LL_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_s <- acc_s %>%
mutate(ML_dist = 1,
LL_dist = separation * 2)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2)
head(acc_sep)
head(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml, all = T)
head(acc_s)
View(s_acc)
View(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml)
View(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll)
View(acc_s)
range(acc_s$LL_acc])
range(acc_s$LL_acc)
range(acc_s$LL_dist)
range(acc_sep$separation)
head(acc_s)
head(acc_c)
head(df_part2)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5))
head(acc_s)
acc_c <- acc_sep %>%
mutate(acc_type = "Centre")
acc_ml <- acc_sep %>%
mutate(ML_dist = separation,
ML_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_ll <- acc_sep %>%
mutate(LL_dist = separation,
LL_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side")
head(acc_s)
head(acc_c)
test <- acc_c %>%
do(data.frame(df = rep(df, each = 2))
)
test <- acc_c %>% rbind(acc_c)
# need to do the above on all accuracy data to look at the switch point
acc_c <- acc_sep %>%
mutate(acc_type = "Centre") %>%
rbind(acc_c)
acc_c <- acc_sep %>%
mutate(acc_type = "Centre")
acc_c <- acc_sep %>%
mutate(acc_type = "Centre") %>%
rbind(acc_c) %>%
mutate()
View(acc_c)
acc_c <- acc_sep %>%
mutate(acc_type = "Centre") %>%
rbind(acc_c) %>%
mutate(bias_type = rep(c("symmetric", "bias"), each = length(acc_sep$separation)))
View(acc_c)
rep(c("symmetric", "bias"), each = length(acc_sep$separation))
1000 + 29336
acc_c <- acc_sep %>%
mutate(acc_type = "Centre") %>%
rbind(acc_c) %>%
mutate(bias_type = rep(c("symmetric", "bias"), each = length(acc_sep$separation)))
acc_c <- acc_sep %>%
mutate(acc_type = "Centre") %>%
rbind(acc_c)
acc_c <- acc_sep %>%
rbind(acc_sep) %>%
mutate(acc_type = "Centre") %>%
mutate(bias_type = rep(c("symmetric", "bias"), each = length(acc_sep$separation)))
View(acc_c)
hea(acc_s)
head(acc_s)
head(acc_s)
head(acc_c)
acc_ll <- acc_sep %>%
mutate(LL_dist = separation,
LL_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side") %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type)
head(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side") %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = accuracy,
value = acc_type)
head(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side") %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "accuracy",
value = "acc_type")
head(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side") %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "acc_type",
value = "accuracy") %>%
mutate(acc_type = strplit(acc_type, '[._]')[2])
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side") %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "acc_type",
value = "accuracy") %>%
mutate(acc_type = strsplit(acc_type, '[._]')[2])
head(acc_s)
strsplit("t_f", '[._]')[[1]][2]
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5),
acc_type = "Side") %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "acc_type",
value = "accuracy") %>%
mutate(acc_type = strsplit(acc_type, '[._]')[[1]][2])
head(acc_s)
head(acc_x)
head(acc_c)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type_type",
value = "accuracy") %>%
mutate(acc_type = strsplit(acc_type, '[._]')[[1]][2],
acc_type = "Side")
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
select(participant, separation, accuracy_bias, accuracy_symmetric, acc_type) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(bias_type = strsplit(bias_type, '[._]')[[1]][2],
acc_type = "Side")
-accuracy)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(bias_type = strsplit(bias_type, '[._]')[[1]][2],
acc_type = "Side")
head(acc_s)
head(acc_c)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(bias_type = strsplit(bias_type, '[._]')[[1]][2],
acc_type = "Side")
head(acc_s)
head(acc_c)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(bias_type = strsplit(bias_type, '[._]')[[1]][2],
acc_type = "Side") %>%
select(participant, separation, accuracy, acc_type, bias_type)
head(acc_s)
head(acc_c)
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type, accuracy)
acc_all <- rbind(acc_c, acc_s) %>%
spread(key = acc_type, value = accuracy)
View(acc_c)
acc_all <- rbind(acc_c, acc_s)
View(acc_all)
acc_all <- rbind(acc_c, acc_s) %>%
spread(key = acc_type)
# all together
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type)
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type, accuracy)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(bias_type = strsplit(bias_type, '[._]')[[1]][2],
acc_type = "Side")
head(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(bias_type = strsplit(bias_type, '[._]')[[1]][2],
acc_type = "Side") %>%
spread(acc_type, accuracy)
View(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy")
View(acc_s)
??separate()
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
separate(bias_type,
c("remove", "bias_type"),
sep = "_")
View(acc_s)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
separate(bias_type,
c("remove", "bias_type"),
sep = "_")
mutate(acc_type = "Side") %>%
select(participant, separation, accuracy, acc_type, bias_type)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(accuracy_bias = (ML_acc * 0.8) + (LL_acc * 0.2),
accuracy_symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(accuracy_bias, accuracy_symmetric),
key = "bias_type",
value = "accuracy") %>%
separate(bias_type,
c("remove", "bias_type"),
sep = "_") %>%
mutate(acc_type = "Side") %>%
select(participant, separation, accuracy, acc_type, bias_type)
View(acc_s)
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type, accuracy)
View(acc_all)
# all together
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type, accuracy) %>%
drop_na()
View(acc_all)
head(acc_all)
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type, accuracy) %>%
drop_na() %>%
mutate(opt_side = ifelse(Centre > Side, 0, 1))
View(acc_all)
checking <- acc_all %>%
group_by(participant, bias_type) %>%
mutate(n = n())
head(acc_all)
head(checking)
length(unique(acc_all$separation))
# do some checks for each participant
checking <- acc_all %>%
group_by(participant, bias_type) %>%
mutate(n = n()) %>%
summarise(prop = sum(opt_side)/n)
checking <- acc_all %>%
group_by(participant, bias_type) %>%
mutate(n = n()) %>%
summarise(prop = sum(opt_side)/unique(n))
head(checking)
checking %>%
ggplot(aes(participant, prop,
fill = bias_type)) +
geom_bar()
checking %>%
ggplot(aes(participant, prop,
fill = bias_type)) +
geom_bar(stat = "identity")
checking %>%
ggplot(aes(participant, prop,
fill = bias_type)) +
geom_bar(stat = "identity",
position = "dodge")
checking %>%
ggplot(aes(participant, prop,
fill = bias_type)) +
geom_bar(stat = "identity",
position = "dodge") +
see::scale_fill_flat()
checking %>%
ggplot(aes(participant, prop,
fill = bias_type)) +
geom_bar(stat = "identity",
position = "dodge") +
see::scale_fill_flat() +
scale_y_continuous("Proportion of Distances participant should fixate the side box")
head(acc_all)
# plot diff in strat over distance
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
facet_wrap(~participant) +
see::scale_color_flat()
# plot diff in strat over distance
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
facet_wrap(~participant) +
see::scale_color_flat() +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_y_continuous("Side - Centre")
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
facet_wrap(~participant) +
see::scale_color_flat() +
geom_hline(yintercept = 0,
linetype = "dashed",
colour = "white") +
scale_y_continuous("Side - Centre") +
see::theme_abyss()
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
facet_wrap(~participant) +
see::scale_color_flat() +
geom_hline(yintercept = 0,
linetype = "dashed",
colour = "white") +
scale_y_continuous("Side - Centre") +
see::theme_blackboard()
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
facet_wrap(~participant) +
# see::scale_color_flat() +
scale_colour_viridis_d() +
geom_hline(yintercept = 0,
linetype = "dashed",
colour = "white") +
scale_y_continuous("Side - Centre") +
see::theme_blackboard()
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
facet_wrap(~participant) +
# see::scale_color_flat() +
scale_colour_viridis_d() +
geom_hline(yintercept = 0,
linetype = "dashed",
colour = "white") +
scale_y_continuous("Side - Centre") +
see::theme_blackboard() +
theme(strip.text.x = element_text(colour = "white"))
