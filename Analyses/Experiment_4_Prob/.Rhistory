mutate(ML_dist = 1,
LL_dist = separation * 2)
ml_acc <- acc_sep %>%
mutate(ML_dist = separation,
ML_acc = accuracy) %>%
select(-separation,
-accuracy)
ll_acc <- acc_sep %>%
mutate(LL_dist = separation,
LL_acc = accuracy) %>%
select(-separation,
-accuracy)
s_acc <- merge(s_dist, ml_acc) %>%
merge(ll_acc) %>%
mutate(acc_type = "Side",
accuracy = (ML_acc * max_chance) + (LL_acc * (1 - max_chance))) %>%
select(separation, participant, bias_type, max_chance, accuracy, acc_type)
# bind together
acc_sep2 <- rbind(s_acc, c_acc) %>%
spread(acc_type, accuracy) %>%
mutate(opt_side = ifelse(Side > Centre, 1, 0))
# need to do the above on all accuracy data to look at the switch point
acc_c <- acc_sep %>%
rbind(acc_sep) %>%
mutate(acc_type = "Centre") %>%
mutate(bias_type = rep(c("symmetric", "bias"), each = length(acc_sep$separation)))
acc_ml <- acc_sep %>%
mutate(ML_dist = separation,
ML_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_ll <- acc_sep %>%
mutate(LL_dist = separation,
LL_acc = accuracy) %>%
select(-separation,
-accuracy)
acc_s <- acc_sep %>%
mutate(ML_dist = 1,
LL_dist = separation * 2) %>%
merge(acc_ml) %>%
merge(acc_ll) %>%
mutate(bias = (ML_acc * 0.8) + (LL_acc * 0.2),
symmetric = (ML_acc * 0.5) + (LL_acc * 0.5)) %>%
select(-accuracy) %>%
# select(participant, separation, accuracy_bias, accuracy_symmetric) %>%
gather(c(bias, symmetric),
key = "bias_type",
value = "accuracy") %>%
mutate(acc_type = "Side") %>%
select(participant, separation, accuracy, acc_type, bias_type)
# all together
acc_all <- rbind(acc_c, acc_s) %>%
spread(acc_type, accuracy) %>%
drop_na() %>%
mutate(opt_side = ifelse(Centre > Side, 0, 1))
# do some checks for each participant
checking <- acc_all %>%
group_by(participant, bias_type) %>%
mutate(n = n()) %>%
summarise(prop = sum(opt_side)/unique(n))
#### plot amount of time participants should have fixated the side ####
# plot to have a look
checking %>%
ggplot(aes(participant, prop,
fill = bias_type)) +
geom_bar(stat = "identity",
position = "dodge") +
see::scale_fill_flat() +
scale_y_continuous("Proportion of Distances participant should fixate the side box")
#### plot difference between the strategies ####
# plot diff in strat over distance
acc_all %>%
mutate(diff = Side - Centre) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
geom_ribbon(aes(ymax = diff, ymin = 0,
fill = bias_type),
alpha = .3) +
facet_wrap(~participant) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw() +
# geom_hline(yintercept = 0,
#            linetype = "dashed",
#            colour = "black") +
scale_y_continuous("Side - Centre")
#### Sort out Expected and Optimal accuracy ####
acc_opt <- acc_all %>%
mutate(Optimal = pmax(Centre, Side)) %>%
select(participant, separation, Optimal) %>%
distinct()
r_acc <- acc_c %>%
mutate(r_dist = separation,
r_acc = accuracy) %>%
select(participant, r_dist, r_acc) %>%
distinct()
l_acc <- acc_c %>%
mutate(l_dist = separation,
l_acc = accuracy) %>%
select(participant, l_dist, l_acc) %>%
distinct()
c_acc <- acc_c %>%
mutate(c_dist = separation,
c_acc = accuracy) %>%
select(participant, c_dist, c_acc) %>%
distinct()
fix_acc <- acc_c %>%
mutate(fix_dist = separation,
fix_acc = accuracy) %>%
select(participant, fix_dist, fix_acc) %>%
distinct()
far_acc <- acc_c %>%
mutate(far_dist = separation,
far_acc = accuracy) %>%
select(participant, far_dist, far_acc) %>%
distinct()
new_acc_measures <- df_part2 %>%
select(participant, block, trial, lcr, standard_boxes, bias_type, bias_left, separation, fixated_box, accuracy) %>%
mutate(l_dist = ifelse(fixated_box == 1, separation,
ifelse(fixated_box == 2, 1, 2*separation)),
r_dist = ifelse(fixated_box == 1, separation,
ifelse(fixated_box == 3, 1, 2*separation)),
c_dist = separation,
fix_dist = 1,
far_dist = separation * 2,
ll_bias = 1 - bias_left) %>%
merge(l_acc) %>%
merge(r_acc) %>%
merge(c_acc) %>%
merge(far_acc) %>%
merge(fix_acc) %>%
mutate(Expected = (l_acc * bias_left) + (r_acc * ll_bias),
Centre = (c_acc * bias_left) + (c_acc * ll_bias),
Side_opt = (fix_acc * pmax(bias_left, ll_bias)) + (far_acc * (pmin(bias_left, ll_bias))),
Side_nopt = (fix_acc * pmin(bias_left, ll_bias)) + (far_acc * (pmax(bias_left, ll_bias))),
Optimal = pmax(Side_opt, Centre))%>%
select(participant,
block,
trial,
lcr,
standard_boxes,
separation,
bias_type,
accuracy,
Expected,
Centre,
Side_opt,
Side_nopt,
Optimal)
#### plot each participant and their expected acc against the centre strat ####
# overall plot
plt_check <- new_acc_measures %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side_opt),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff_EO, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
theme_bw() +
facet_wrap(~participant) +
# facet_wrap(participant ~ bias_type) +
# theme(strip.text.x = element_blank()) +
geom_line(aes(separation, diff_CO, colour = bias_type),
linetype = "dashed") +
scale_y_continuous("Expected/Optimal") +
scale_x_continuous("Delta (pixels)")
plt_check
#### Plot region of worst performance ####
# region of worst performance and expected accuracy
plt_lines_region <- new_acc_measures %>%
group_by(participant) %>%
mutate(sep_factor = as.numeric(as.factor(separation))) %>%
group_by(participant, sep_factor, bias_type) %>%
summarise(Expected = mean(Expected),
Centre = mean(Centre),
Side_opt = mean(Side_opt),
Side_nopt = mean(Side_nopt)) %>%
ungroup() %>%
group_by(sep_factor, bias_type) %>%
mutate(Best = pmax(Expected, Centre, Side_opt, Side_nopt),
Worst = pmin(Expected, Centre, Side_opt, Side_nopt),
ymin_w = min(Worst),
ymax_w = max(Worst),
ymin_b = min(Best),
ymax_b = max(Best)) %>%
ggplot(aes(sep_factor, Expected)) +
geom_ribbon(aes(ymin = ymin_w,
ymax = ymax_w,
fill = "worst"),
alpha = .3) +
geom_ribbon(aes(ymin = ymin_b,
ymax = ymax_b,
fill = "best"),
alpha = .3) +
geom_line(aes(group = participant, colour = bias_type)) +
# see::scale_color_pizza_d() +
# see::scale_fill_pizza() +
scale_color_viridis_d() +
ggthemes::scale_fill_economist() +
facet_wrap(~bias_type) +
guides(fill = F) +
theme_bw()
plt_lines_region
# maybe add a dashed line to show where accuracy would drop to at optimal?
plt_lines_region <- new_acc_measures %>%
group_by(participant) %>%
mutate(sep_factor = as.numeric(as.factor(separation))) %>%
group_by(participant, sep_factor, bias_type) %>%
summarise(Expected = mean(Expected),
Centre = mean(Centre),
Side_opt = mean(Side_opt),
Side_nopt = mean(Side_nopt)) %>%
ungroup() %>%
group_by(sep_factor, bias_type) %>%
mutate(Best = pmax(Expected, Centre, Side_opt, Side_nopt),
Worst = pmin(Expected, Centre, Side_opt, Side_nopt),
ymin_w = min(Worst),
ymax_w = max(Worst),
ymin_b = min(Best),
ymax_b = max(Best)) %>%
# gather the best and worst regions?
ggplot(aes(sep_factor, Expected)) +
geom_ribbon(aes(ymin = ymin_w,
ymax = ymax_w,
fill = "red"),
alpha = .3) +
geom_ribbon(aes(ymin = ymin_b,
ymax = ymax_b,
fill = "green"),
alpha = .3) +
geom_line(aes(group = participant)) +
# see::scale_color_pizza_d() +
# see::scale_fill_pizza() +
facet_wrap(~bias_type) +
guides(fill = F) +
theme_bw()
plt_lines_region
# region of worst performance and expected accuracy
df_regions <- new_acc_measures %>%
group_by(participant) %>%
mutate(sep_factor = as.numeric(as.factor(separation))) %>%
group_by(participant, sep_factor, bias_type) %>%
summarise(Expected = mean(Expected),
Centre = mean(Centre),
Side_opt = mean(Side_opt),
Side_nopt = mean(Side_nopt)) %>%
ungroup() %>%
group_by(sep_factor, bias_type) %>%
mutate(Best = pmax(Expected, Centre, Side_opt, Side_nopt),
Worst = pmin(Expected, Centre, Side_opt, Side_nopt),
ymin_w = min(Worst),
ymax_w = max(Worst),
ymin_b = min(Best),
ymax_b = max(Best))
plt_lines_region <- df_regions %>%
# gather the best and worst regions?
ggplot(aes(sep_factor, Expected)) +
geom_ribbon(aes(ymin = ymin_w,
ymax = ymax_w,
fill = "red"),
alpha = .3) +
geom_ribbon(aes(ymin = ymin_b,
ymax = ymax_b,
fill = "green"),
alpha = .3) +
geom_line(aes(group = participant)) +
# see::scale_color_pizza_d() +
# see::scale_fill_pizza() +
facet_wrap(~bias_type) +
guides(fill = F) +
theme_bw()
plt_lines_region
head(df_regions)
head(df_regions)
df_regions <- new_acc_measures %>%
group_by(participant) %>%
mutate(sep_factor = as.numeric(as.factor(separation))) %>%
group_by(participant, sep_factor, bias_type) %>%
summarise(Expected = mean(Expected),
Centre = mean(Centre),
Side_opt = mean(Side_opt),
Side_nopt = mean(Side_nopt)) %>%
ungroup() %>%
group_by(sep_factor, bias_type) %>%
mutate(Best = pmax(Expected, Centre, Side_opt, Side_nopt),
Worst = pmin(Expected, Centre, Side_opt, Side_nopt),
ymin_Worst = min(Worst),
ymax_Worst = max(Worst),
ymin_Best = min(Best),
ymax_Best = max(Best))
plt_lines_region <- df_regions %>%
ggplot(aes(sep_factor, Expected)) +
geom_ribbon(aes(ymin = ymin_Worst,
ymax = ymax_Worst,
fill = "red"),
alpha = .3) +
geom_ribbon(aes(ymin = ymin_Best,
ymax = ymax__Best,
fill = "green"),
alpha = .3) +
geom_line(aes(group = participant)) +
# see::scale_color_pizza_d() +
# see::scale_fill_pizza() +
facet_wrap(~bias_type) +
guides(fill = F) +
theme_bw()
plt_lines_region
plt_lines_region <- df_regions %>%
ggplot(aes(sep_factor, Expected)) +
geom_ribbon(aes(ymin = ymin_Worst,
ymax = ymax_Worst,
fill = "red"),
alpha = .3) +
geom_ribbon(aes(ymin = ymin_Best,
ymax = ymax_Best,
fill = "green"),
alpha = .3) +
geom_line(aes(group = participant)) +
# see::scale_color_pizza_d() +
# see::scale_fill_pizza() +
facet_wrap(~bias_type) +
guides(fill = F) +
theme_bw()
plt_lines_region
df_regions %>%
gather(c(Best, Worst),
key = "test",
value = "test2")
df_regions %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "test2")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "test2")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst, ymin_Best),
key = "ymin",
value = "val")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "test2")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "test2") %>%
separate(test,
into = (y_type, BW),
sep = "_")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "test2") %>%
separate(test,
into = c(y_type, BW),
sep = "_")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "test2") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_")
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(BW)
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(BW, val)
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val)
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val) %>%
ggplot(aes(sep_factor, Expected)) +
geom_line() +
geom_ribbon(aes(ymin = ymin,
ymax = ymax,
fill = BW)) +
facet_wrap(~bias_type)
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val) %>%
ggplot(aes(sep_factor, Expected)) +
geom_line(aes(group = participant)) +
geom_ribbon(aes(ymin = ymin,
ymax = ymax,
fill = BW)) +
facet_wrap(~bias_type)
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val) %>%
ggplot(aes(sep_factor, Expected)) +
geom_line(aes(group = participant)) +
geom_ribbon(aes(ymin = ymin,
ymax = ymax,
fill = BW),
alpha = .1) +
facet_wrap(~bias_type)
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val) %>%
ggplot(aes(sep_factor, Expected)) +
geom_line(aes(group = participant)) +
geom_ribbon(aes(ymin = ymin,
ymax = ymax,
fill = BW),
alpha = .1) +
facet_wrap(~bias_type) +
theme_bw()
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val) %>%
ggplot(aes(sep_factor, Expected)) +
geom_line(aes(group = participant)) +
geom_ribbon(aes(ymin = ymin,
ymax = ymax,
fill = BW),
alpha = .1) +
facet_wrap(~bias_type) +
scale_fill_distiller() +
theme_bw()
df_regions %>%
select(-Best, -Worst) %>%
gather(c(ymin_Worst:ymax_Best),
key = "test",
value = "val") %>%
separate(test,
into = c("y_type", "BW"),
sep = "_") %>%
spread(y_type, val) %>%
ggplot(aes(sep_factor, Expected)) +
geom_line(aes(group = participant)) +
geom_ribbon(aes(ymin = ymin,
ymax = ymax,
fill = BW),
alpha = .1) +
facet_wrap(~bias_type) +
scale_fill_brewer() +
theme_bw()
