}
}
pairs <- Eu_old/2
going <- T
start_val <- Eu_old
count <- 1
while(going){
pairs <- start_val/2
start_val <- start_val + (pairs * 3)
count <- count + 1
if(start_val > Eu_present){
print(count)
going = F
}
}
2^.25
2*(2*.25)
2^.25
4*sqrt(2^1)
help(nthroot)
??nthroot
log(4)
2^1.386
log2(4)
exp(1.386)
60*.65
60*.65
40*.65
60*.6
setwd("~/")
setwd("F:/Uni/Github/Breaking_symmetry/Analyses/Experiment_4_Prob")
#### Analysis for Probability study ####
# These are the analyses that will be included in the paper
#### Library ####
library(tidyverse)
library(lme4)
library(brms)
#### functions ####
# should I write a function for plotting predictions?
#### load data ####
load("scratch/new_data/df_part2_fixed")
# processing
df_model <- df_part2_fixed %>%
filter(separation != 640) %>% # remove furthest point for now
select(participant, dist_type, bias_type, separation, st_box, accuracy) %>%
mutate(Ml_fix = ifelse(st_box == "most likely", 1, 0),
S_fix = ifelse(st_box != "centre", 1, 0))
m_fix_like_sep.2 <- glmer(Ml_fix ~ bias_type * dist_type + (bias_type * dist_type|participant),
data = df_model,
family = "binomial")
summary(m_fix_like_sep.2)
df_model$p = predict(m_fix_like_sep.2, type = "response")
df_model$p_fe = predict(m_fix_like_sep.2, re.form = NA, type = "response")
df_model %>%
mutate(participant = as.factor(as.numeric(participant))) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Predicted = mean(p),
Actual = mean(Ml_fix),
FE = mean(p_fe)) %>%
ungroup() %>%
group_by(bias_type, dist_type) %>%
mutate(med_FE = median(Predicted)) %>%
ggplot(aes(participant, Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
geom_hline(aes(yintercept = FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
head(df_model)
mean(df_model$p_fe)
df_model %>% group_by(dist_type, bias_type) %>%
summarise(p_re = mean(p),
p_fe = mean(p_fe))
df_model %>% group_by(dist_type, bias_type) %>%
summarise(p_re = mean(p),
p_fe = mean(p_fe)) %>%
mutate(p_re_percent = boot::inv.logit(p_re),
p_fe_percent = boot::inv.logit(p_fe))
df_model %>% group_by(dist_type, bias_type) %>%
summarise(p_re = mean(p),
p_fe = mean(p_fe))
df_model %>% group_by(dist_type, bias_type) %>%
summarise(p_re_mu = mean(p),
p_re_med = median(p),
p_fe_mu = mean(p_fe),
p_fe_med = median(p_fe))
summary(m_fix_like_sep.2)
boot::inv.logit(1.13 - .72)
boot::inv.logit(1.13 + .72)
boot::inv.logit(1.13)
df_model %>% group_by(dist_type, bias_type) %>%
summarise(p_re_mu = mean(p),
p_re_med = median(p),
p_fe_mu = mean(p_fe),
p_fe_med = median(p_fe))
bm_fix_like_dt <- brm(Ml_fix ~ (bias_type + dist_type)^2 + (dist_type * bias_type|participant),
data = df_model,
family = "bernoulli",
chains = 1,
iter = 1000,
warmup = 500)
summary(bm_fix_like_dt)
df_model$p_b <- predict(bm_fix_S_dt, type = "response")
df_model$p_b_fe <- predict(bm_fix_S_dt, re.form = NA, type = "response")
df_model %>%
mutate(participant_num = as.numeric(as.factor(participant))) %>%
group_by(participant, participant_num, dist_type, bias_type) %>%
summarise(Actual = mean(S_fix),
Predicted = mean(p_b[,1]),
Predicted_lower = mean(p_b[,3]),
Predicted_upper = mean(p_b[,4]),
FE = mean(p_b_fe[,1]),
FE_lower = mean(p_b_fe[,3]),
FE_upper = mean(p_b_fe[,4])) %>%
ungroup() %>%
group_by(dist_type, bias_type) %>%
mutate(Predicted_lower = mean(Predicted_lower),
Predicted_upper = mean(Predicted_upper),
FE = mean(FE),
FE_lower = mean(FE_lower),
FE_upper = mean(FE_upper)) %>%
ggplot(aes(participant,# Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
geom_ribbon(aes(x = participant_num,
ymin = Predicted_lower,
ymax = Predicted_upper,
fill = dist_type),
alpha = .1) +
geom_hline(aes(yintercept = FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
df_model$p_b <- predict(bm_fix_like_dt, type = "response")
df_model$p_b_fe <- predict(bm_fix_like_dt, re.form = NA, type = "response")
df_model %>%
mutate(participant_num = as.numeric(as.factor(participant))) %>%
group_by(participant, participant_num, dist_type, bias_type) %>%
summarise(Actual = mean(Ml_fix),
Predicted = mean(p_b[,1]),
Predicted_lower = mean(p_b[,3]),
Predicted_upper = mean(p_b[,4]),
FE = mean(p_b_fe[,1]),
FE_lower = mean(p_b_fe[,3]),
FE_upper = mean(p_b_fe[,4])) %>%
ungroup() %>%
group_by(dist_type, bias_type) %>%
mutate(Predicted_lower = mean(Predicted_lower),
Predicted_upper = mean(Predicted_upper),
FE = mean(FE),
FE_lower = mean(FE_lower),
FE_upper = mean(FE_upper)) %>%
ggplot(aes(participant,# Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
geom_ribbon(aes(x = participant_num,
ymin = Predicted_lower,
ymax = Predicted_upper,
fill = dist_type),
alpha = .1) +
geom_hline(aes(yintercept = FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
df_model %>%
mutate(participant_num = as.numeric(as.factor(participant))) %>%
group_by(participant, participant_num, dist_type, bias_type) %>%
summarise(Actual = mean(Ml_fix),
Predicted = mean(p_b[,1]),
Predicted_lower = mean(p_b[,3]),
Predicted_upper = mean(p_b[,4]),
FE = mean(p_b_fe[,1]),
FE_lower = mean(p_b_fe[,3]),
FE_upper = mean(p_b_fe[,4])) %>%
ungroup() %>%
group_by(dist_type, bias_type) %>%
mutate(Predicted_lower = mean(Predicted_lower),
Predicted_upper = mean(Predicted_upper),
FE = mean(FE),
FE_lower = mean(FE_lower),
FE_upper = mean(FE_upper)) %>%
ggplot(aes(participant,# Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
# geom_ribbon(aes(x = participant_num,
#                 ymin = Predicted_lower,
#                 ymax = Predicted_upper,
#                 fill = dist_type),
#             alpha = .1) +
geom_hline(aes(yintercept = FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
summary(m_fix_like_sep.2)
boot::inv.logit(-1.49)
summmary(bm_fix_like_dt)
summary(bm_fix_like_dt)
boot::inv.logit(-1.45)
df_model %>%
mutate(participant_num = as.numeric(as.factor(participant))) %>%
group_by(participant, participant_num, dist_type, bias_type) %>%
summarise(Actual = mean(Ml_fix),
Predicted = mean(p_b[,1]),
Predicted_lower = mean(p_b[,3]),
Predicted_upper = mean(p_b[,4]),
FE = mean(p_b_fe[,1]),
FE_lower = mean(p_b_fe[,3]),
FE_upper = mean(p_b_fe[,4])) %>%
ungroup() %>%
group_by(dist_type, bias_type) %>%
mutate(Predicted_lower = mean(Predicted_lower),
Predicted_upper = mean(Predicted_upper),
FE = mean(FE),
FE_lower = mean(FE_lower),
FE_upper = mean(FE_upper)) %>%
ggplot(aes(participant,# Proportion,
colour = bias_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
# geom_ribbon(aes(x = participant_num,
#                 ymin = Predicted_lower,
#                 ymax = Predicted_upper,
#                 fill = dist_type),
#             alpha = .1) +
geom_hline(aes(yintercept = FE,
colour = bias_type),
linetype = "dashed") +
facet_wrap(~dist_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
df_model %>%
mutate(participant_num = as.numeric(as.factor(participant))) %>%
group_by(participant, participant_num, dist_type, bias_type) %>%
summarise(Actual = mean(Ml_fix),
Predicted = mean(p_b[,1]),
Predicted_lower = mean(p_b[,3]),
Predicted_upper = mean(p_b[,4]),
FE = mean(p_b_fe[,1]),
FE_lower = mean(p_b_fe[,3]),
FE_upper = mean(p_b_fe[,4])) %>%
ungroup() %>%
group_by(dist_type, bias_type) %>%
mutate(Predicted_lower = mean(Predicted_lower),
Predicted_upper = mean(Predicted_upper),
FE = mean(FE),
FE_lower = mean(FE_lower),
FE_upper = mean(FE_upper)) %>%
ggplot(aes(participant,# Proportion,
colour = bias_type,
fill = bias_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
# geom_ribbon(aes(x = participant_num,
#                 ymin = Predicted_lower,
#                 ymax = Predicted_upper,
#                 fill = dist_type),
#             alpha = .1) +
geom_hline(aes(yintercept = FE,
colour = bias_type),
linetype = "dashed") +
facet_wrap(~dist_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
temp <- df_model %>% filter(st_box != "centre")
m_fix_like_sep.2 <- glmer(Ml_fix ~ bias_type * dist_type + (bias_type * dist_type|participant),
data = temp,
family = "binomial")
summary(m_fix_like_sep.2)
boot::inv.logit(2.4)
boot::inv.logit(2.4-1.7)
boot::inv.logit(1.49)
m_fix_like_sep.2 <- glmer(Ml_fix ~ bias_type * dist_type + (bias_type * dist_type|participant),
data = df_model,
family = "binomial")
summary(m_fix_like_sep.2)
boot::inv.logit(1.13)
boot::inv.logit(1.13 - 1.49)
75-41
inv.logit(-1.49)
boot::inv.logit(-1.49)
.75 - .41
boot::inv.logit(1.13) - boot::inv.logit(-1.49)
75 - 18
m_fix_like_sep.2 <- glmer(Ml_fix ~ bias_type * dist_type + (bias_type * dist_type|participant),
data = df_model,
family = logit)
m_fix_like_sep.2 <- glmer(Ml_fix ~ bias_type * dist_type + (bias_type * dist_type|participant),
data = df_model,
family = "logit")
df_model$p = predict(m_fix_like_sep.2, type = "response")
df_model$p_fe = predict(m_fix_like_sep.2, re.form = NA, type = "response")
df_model %>%
mutate(participant = as.factor(as.numeric(participant))) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Predicted = mean(p),
Actual = mean(Ml_fix),
FE = mean(p_fe)) %>%
ungroup() %>%
group_by(bias_type, dist_type) %>%
mutate(med_FE = median(Predicted)) %>%
ggplot(aes(participant, Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
geom_hline(aes(yintercept = FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
boot::inv.logit(1.13) - boot::inv.logit(-1.49)
boot::inv.logit(1.13)
boot::inv.logit(1.13 - 1.49)
df_model$p = predict(m_fix_like_sep.2, type = "response")
df_model$p_fe = predict(m_fix_like_sep.2, re.form = NA, type = "response")
df_model %>%
mutate(participant = as.factor(as.numeric(participant))) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Predicted = mean(p),
Actual = mean(Ml_fix),
FE = mean(p_fe)) %>%
ungroup() %>%
group_by(bias_type, dist_type) %>%
mutate(mean_FE = mean(Predicted)) %>%
ggplot(aes(participant, Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
geom_hline(aes(yintercept = mean_FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
df_model %>%
mutate(participant = as.factor(as.numeric(participant))) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Predicted = mean(p),
Actual = mean(Ml_fix),
FE = mean(p_fe)) %>%
ungroup() %>%
group_by(bias_type, dist_type) %>%
mutate(mean_FE = mean(Predicted)) %>%
ggplot(aes(participant, Proportion,
colour = dist_type,
fill = dist_type)) +
geom_point(aes(y = Actual),
shape = 21) +
geom_point(aes(y = Predicted),
fill = "white",
shape = 21) +
geom_hline(aes(yintercept = FE,
colour = dist_type),
linetype = "dashed") +
facet_wrap(~bias_type) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw()
summary(m_fix_like_sep.2)
boot::inv.logit(1.1314)
boot::inv.logit(1.1314) - boot::inv.logit(-1.1492)
boot::inv.logit(1.1314-1.1492)
boot::inv.logit(1.1314-1.492)
decs <- cbind(Est = fixef(m_fix_like_sep.2), LL = fixef(m_fix_like_sep.2) - 1.96 * sqrt(diag(vcov(m_fix_like_sep.2)), U = fixef(m_fix_like_sep.2) + 1.96 * sqrt(diag(vcov(m_fix_like_sep.2))))
)
decs <- cbind(Est = fixef(m_fix_like_sep.2), LL = fixef(m_fix_like_sep.2) - 1.96 * sqrt(diag(vcov(m_fix_like_sep.2))), U = fixef(m_fix_like_sep.2) + 1.96 * sqrt(diag(vcov(m_fix_like_sep.2))))
decs
summary(m_fix_like_sep.2)
decs
exp(decs)
boot::inv.logit(decs)
plot(ranef(m_fix_like_sep.2))
temp<- simulate(m_fix_like_sep.2, nsim = 100)
head(temp)
mean(1:4)
1 + 2+ 3+ 4
temp %>% mutate(results = mean(sim_1:sim_100))
temp %>% rowwise() %>% mutate(results = mean(sim_1:sim_100))
temp %>% rowwise() %>% mutate(results = mean(sim_1:sim_100)) %>% select(results)
temp %>% rowwise() %>% mutate(results = rowMeans(sim_1:sim_100)) %>% select(results)
temp %>% rowwise() %>% mutate(results = mean(c(sim_1:sim_100))) %>% select(results)
test <- temp %>% rowwise() %>% mutate(results = mean(c(sim_1:sim_100))) %>% select(results)
range(test)
unique(test)
test <- temp[1,]
test
test %>% summarise(g = mean(c(sim_1:sim_100)))
test %>% summarise(g = mean(as.numeric(c(sim_1:sim_100))))
tibble(a = 1, b = 1, c = 0, d = 1) %>% summarise(mean = mean(c(a:d)))
tibble(a = 1, b = 1, c = 0, d = 1) %>% summarise(mean = mean(c(a:c)))
str(test)
View(temp)
test %>% summarise(g = sum(c(sim_1:sim_100)))
tibble(a = 1, b = 1, c = 0, d = 1) %>% summarise(mean = mean(c(b:c)))
a <- 1
b <- 1
c <- 0
mean(a, b, c)
mean(c(a, b, c))
test %>% summarise_all(fun("means"))
test %>% summarise_all(funs(mean))
test %>% rowwise() %>% summarise(lambda(mean = mean))
test %>% rowwise() %>% summarise(list(mean = mean()))
test %>% rowwise() %>% summarise(list(mean = mean)
)
test %>% rowwise() %>% summarise_all(list(mean = mean()))
test %>% rowwise() %>% summarise_all(list(mean))
test %>% rowwise() %>% summarise_all(mu = list(mean))
test %>% rowwise() %>% summarise_all(list(mu = mean))
test %>% rowwise() %>% summarise(mu = rowMeans))
test %>% rowwise() %>% summarise(mu = rowMeans()))
test %>% rowwise() %>% summarise(mu = rowMeans())
test %>% rowwise() %>% summarise(mu = rowMeans(.))
test %>% %>% summarise(mu = rowMeans(.))
test %>%  summarise(mu = rowMeans(.))
test %>% mutate(mu = rowMeans(.))
temp %>% mutate(mu = rowMeans(.))
temp %>% mutate(mu = rowMeans(.)) %>% select(mu) -> mu
head(mu)
df_model$sim_mu <- mu
head(df_model)
df_model %>% group_by(participant, bias_type, dist_type) %>% summarise(mu = mean(mu),
p = mean(p),
act = mean(accuracy))
str(df_model)
df_model <- cbind(mu)
head(df_model)
# processing
df_model <- df_part2_fixed %>%
filter(separation != 640) %>% # remove furthest point for now
select(participant, dist_type, bias_type, separation, st_box, accuracy) %>%
mutate(Ml_fix = ifelse(st_box == "most likely", 1, 0),
S_fix = ifelse(st_box != "centre", 1, 0))
#### analysis #
df_model$p = predict(m_fix_S_sep.2, type = "response")
df_model$p_fe = predict(m_fix_S_sep.2, re.form = NA, type = "response")
df_model$p = predict(m_fix_like_sep.2, type = "response")
df_model$p_fe = predict(m_fix_like_sep.2, re.form = NA, type = "response")
head(df_model)
df_model <- cbind(df_model, mu)
head(df_model)
df_model %>% group_by(participant, dist_type, bias_type) %>% summarise(p = mean(p),)
df_model %>% group_by(participant, dist_type, bias_type) %>% summarise(p = mean(p),
mu = mean(mu),
act = mean(accuracy))
df_model %>% group_by(participant, dist_type, bias_type) %>% summarise(p = mean(p),
mu = mean(mu),
act = mean(Ml-))
df_model %>% group_by(participant, dist_type, bias_type) %>% summarise(p = mean(p),
mu = mean(mu),
act = mean(Ml_fix))
df_model %>% group_by(dist_type, bias_type) %>% summarise(p = mean(p),
mu = mean(mu),
act = mean(Ml_fix))
df_model %>% group_by(participant, dist_type, bias_type) %>% ggplot(aes(mu, fill = bias_type, colour = bias_type)) +
geom_histogram(position = "dodge") + facet_wrap(~dist_type)
df_model %>% group_by(participant, bias_type, dist_type) %>% summarise(act = mean(Ml_fix)) %>%
ggplot(aes(act, fill = bias_type, colour = bias_type)) +
geom_histogram(position = "dodge") +
facet_wrap(~dist_type)
