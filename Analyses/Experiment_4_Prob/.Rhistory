participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw()
plt_check
View(plt_check)
View(plt_check[["data"]])
plt_check <- test %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff = Expected/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw()
plt_check
View(plt_check[["data"]])
plt_check <- test %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff = Expected/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw() +
scale_y_continuous("Expected/Optimal")
plt_check
plt_check <- test %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff = Expected/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw() +
scale_y_continuous("Expected/Optimal") +
scale_x_continuous("Delta (pixels)")
plt_check
plt_check <- test %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff_EO, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw() +
geom_line(aes(separation, diff_CO, colour = bias_type),
linetype = "dashed") +
scale_y_continuous("Expected/Optimal") +
scale_x_continuous("Delta (pixels)")
plt_check
head(plt_check[["data"]])
test <- df_part2 %>%
select(participant, bias_type, bias_left, separation, fixated_box, accuracy) %>%
mutate(l_dist = ifelse(fixated_box == 1, separation,
ifelse(fixated_box == 2, 1, 2*separation)),
r_dist = ifelse(fixated_box == 1, separation,
ifelse(fixated_box == 3, 1, 2*separation)),
c_dist = separation,
fix_dist = 1,
far_dist = separation * 2,
ll_bias = 1 - bias_left) %>%
merge(l_acc) %>%
merge(r_acc) %>%
merge(c_acc) %>%
merge(far_acc) %>%
merge(fix_acc) %>%
mutate(Expected = (l_acc * bias_left) + (r_acc * ll_bias),
Centre = (c_acc * bias_left) + (c_acc * ll_bias),
Side = (fix_acc * pmax(bias_left, ll_bias)) + (far_acc * (pmin(bias_left, ll_bias))),
Optimal = pmax(Side, Centre))%>%
select(participant,
separation,
bias_type,
accuracy,
Expected,
Centre,
Side,
Optimal)
# overall plot
plt_check <- test %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff_EO, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw() +
geom_line(aes(separation, diff_CO, colour = bias_type),
linetype = "dashed") +
scale_y_continuous("Expected/Optimal") +
scale_x_continuous("Delta (pixels)")
plt_check
head(plt_check[["data"]])
# now take the above data and we can plot something like the boxplots from before
plt_check[["data"]] %>%
mutate(dist_type = ifelse(Centre > Optimal, "close", "far")) %>%
ggplot(aes(dist_type, diff_EO, fill = bias_type)) +
geom_boxplot()
plt_check[["data"]] %>%
rowwise() %>%
mutate(dist_type = ifelse(Centre > Optimal, "close", "far")) %>%
ggplot(aes(dist_type, diff_EO, fill = bias_type)) +
geom_boxplot()
test <- plt_check[["data"]] %>%
rowwise() %>%
mutate(dist_type = ifelse(Centre > Optimal, "close", "far")) %>%
ggplot(aes(dist_type, diff_EO, fill = bias_type)) +
geom_boxplot()
test <- plt_check[["data"]] %>%
rowwise() %>%
mutate(dist_type = ifelse(Centre > Optimal, "close", "far"))
View(test)
test <- df_part2 %>%
select(participant, bias_type, bias_left, separation, fixated_box, accuracy) %>%
mutate(l_dist = ifelse(fixated_box == 1, separation,
ifelse(fixated_box == 2, 1, 2*separation)),
r_dist = ifelse(fixated_box == 1, separation,
ifelse(fixated_box == 3, 1, 2*separation)),
c_dist = separation,
fix_dist = 1,
far_dist = separation * 2,
ll_bias = 1 - bias_left) %>%
merge(l_acc) %>%
merge(r_acc) %>%
merge(c_acc) %>%
merge(far_acc) %>%
merge(fix_acc) %>%
mutate(Expected = (l_acc * bias_left) + (r_acc * ll_bias),
Centre = (c_acc * bias_left) + (c_acc * ll_bias),
Side = (fix_acc * pmax(bias_left, ll_bias)) + (far_acc * (pmin(bias_left, ll_bias))),
Optimal = pmax(Side, Centre))%>%
select(participant,
separation,
bias_type,
accuracy,
Expected,
Centre,
Side,
Optimal)
# overall plot
plt_check <- test %>%
group_by(participant, bias_type, separation) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(separation, diff_EO, colour = bias_type)) +
geom_line() +
see::scale_colour_flat() +
facet_wrap(~participant) +
theme_bw() +
geom_line(aes(separation, diff_CO, colour = bias_type),
linetype = "dashed") +
scale_y_continuous("Expected/Optimal") +
scale_x_continuous("Delta (pixels)")
plt_check
# now take the above data and we can plot something like the boxplots from before
plt_check[["data"]] %>%
rowwise() %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
ggplot(aes(dist_type, diff_EO, fill = bias_type)) +
geom_boxplot()
# now take the above data and we can plot something like the boxplots from before
plt_check[["data"]] %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
ggplot(aes(dist_type, diff_EO, fill = bias_type)) +
geom_boxplot()
test %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(dist_type, diff_EO, fill = bias_type)) +
geom_boxplot()
test %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(dist_type, diff_EO,
colour = bias_type,
fill = bias_type),
alphe = .3) +
geom_boxplot() +
see::scale_color_flat() +
see::scale_fill_flat()
# now take the above data and we can plot something like the boxplots from before
test %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(dist_type, diff_EO,
colour = bias_type,
fill = bias_type),
alpha = .3) +
geom_boxplot() +
see::scale_color_flat() +
see::scale_fill_flat()
test %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(dist_type, diff_EO,
colour = bias_type,
fill = bias_type)) +
geom_boxplot(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat()
plt_box_acc <- test %>%
mutate(dist_type = ifelse(Centre > Side, "close", "far")) %>%
group_by(participant, bias_type, dist_type) %>%
summarise(Actual = mean(accuracy),
Centre = mean(Centre),
Side = mean(Side),
Expected = mean(Expected),
Optimal = mean(Optimal)) %>%
ungroup() %>%
mutate(diff_EO = Expected/Optimal,
diff_CO = Centre/Optimal,
participant = as.factor(as.numeric(participant))) %>%
ggplot(aes(dist_type, diff_EO,
colour = bias_type,
fill = bias_type)) +
geom_boxplot(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous("Expected/Optimal") +
scale_x_discrete("Distance Type")
plt_box_acc
#### Making plots for the paper ####
# probability matching
#### Library ####
library(tidyverse)
#### functions ####
#### Load data ####
load("scratch/new_data/df_part2")
load("scratch/new_data/AccMea")
#### Processing ####
df_part2 <- df_part2 %>%
mutate(dist_type = ifelse(separation < Switching_point,
"Close", "Far"),
bias_type = ifelse(bias_type == "biased", "Biased", "Symmetric")) %>%
select(participant,
block,
bias_type,
bias_left,
separation,
dist_type,
Switching_point,
lcr,
standard_boxes,
accuracy)
#### Making plots for the paper ####
# probability matching
#### Library ####
library(tidyverse)
#### functions ####
#### Load data ####
load("scratch/new_data/df_part2")
load("scratch/new_data/AccMea")
#### Processing ####
df_part2 <- df_part2 %>%
mutate(dist_type = ifelse(separation < Switching_point,
"Close", "Far"),
bias_type = ifelse(bias_type == "biased", "Biased", "Symmetric")) %>%
select(participant,
block,
bias_type,
bias_left,
separation,
dist_type,
Switching_point,
lcr,
standard_boxes,
accuracy)
#### NB: Really close... one point isn't working for some reason.... ####
# Need to work on labels
# labels should reflect participants' own biases in the "symmetric" condition
check <- df_part2 %>%
select(participant, bias_type, lcr, standard_boxes, dist_type) %>%
group_by(participant, bias_type, lcr, standard_boxes, dist_type) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr,
nesting(participant, bias_type, standard_boxes, dist_type),
fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
n = ifelse(lcr2 == 0, max(`0`),
ifelse(lcr2 == 1, max(`1`), max(`-1`)))) %>%
select(participant, bias_type, standard_boxes, lcr2, most, least, dist_type) %>%
merge(df_part2) %>%
mutate(st_box = ifelse(bias_type == "Biased", standard_boxes,
ifelse(lcr == 0, "centre",
ifelse(lcr == most, "most likely", "least likely"))))
AccMea %>%
filter(separation != 640) %>%
group_by(participant, condition, separation) %>%
spread(Pred_type,
Acc) %>%
gather(c(Actual, Optimal, Expected),
key = "Acc_type",
value = "Acc") %>%
ungroup() %>%
mutate(separation = separation/switch_point) %>%
ggplot(aes(separation, Acc, colour = Acc_type)) +
geom_path(aes(group = interaction(participant, Acc_type)),
alpha = 1) +
facet_wrap(~condition, scales = "free") +
scale_colour_viridis_d()
plt <- AccMea %>%
filter(separation != 640) %>%
group_by(participant, condition, separation) %>%
spread(Pred_type,
Acc) %>%
ungroup() %>%
mutate(Expected = round(Expected, 2),
Optimal = round(Optimal, 2),
Diff = Expected/Optimal,
separation = separation/switch_point) %>%
ggplot(aes(separation, Diff, colour = condition)) +
# geom_line(data = plt_region,
#           aes(separation,
#               mean_centre,
#               group = condition,
#               linetype = condition),
#           colour = "green") +
geom_hline(yintercept = 1, colour = "black",
linetype = "dashed") +
geom_segment(aes(x = 1, y = 0,
xend = 1, yend = 1),
colour = "black",
linetype = "dashed") +
# geom_vline(xintercept = 1, colour = "black",
#            linetype = "dashed") +
geom_path(aes(group = interaction(condition, participant)),
alpha = 1) +
see::scale_colour_flat() +
theme_bw() +
# see::theme_modern() +
coord_cartesian(expand = F)
plt$labels$y <- "Accuracy ratio (Expected/Optimal)"
plt$labels$x <- "Distance relative to switch point"
plt$labels$colour <- "Condition"
plt
plt <- AccMea %>%
filter(separation != 640) %>%
group_by(participant, condition, separation) %>%
spread(Pred_type,
Acc) %>%
ungroup() %>%
mutate(Diff = Expected - Optimal,
separation = separation/switch_point) %>%
ggplot(aes(separation, Diff, colour = condition)) +
geom_hline(yintercept = 0, colour = "white") +
geom_vline(xintercept = 1, colour = "white") +
geom_path(aes(group = interaction(condition, participant)),
alpha = 1) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
see::scale_colour_flat() +
see::theme_blackboard()
plt$labels$y <- "Difference (Expected - Optimal)"
plt$labels$x <- "Distance relative to switch point"
plt
# difference of actual and optimal
AccMea %>%
spread(Pred_type,
Acc) %>%
mutate(dist_type = ifelse(separation < switch_point, "Close", "Far"),
Diff_Opt_m_Acc = Optimal - Actual,
Diff_Opt_m_Exp = Optimal - Expected,
Diff_Opt_d_Exp = Expected/Optimal) %>%
group_by(participant, condition, dist_type) %>%
summarise(Diff_Opt_m_Acc = mean(Diff_Opt_m_Acc),
Diff_Opt_m_Exp = mean(Diff_Opt_m_Exp),
Diff_Opt_d_Exp = mean(Diff_Opt_d_Exp)) %>%
ggplot(aes(dist_type, Diff_Opt_d_Exp,
fill = condition,
colour = condition)) +
geom_boxplot(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw() +
scale_x_discrete("Distance Type") +
scale_y_continuous("Expected Accuracy / Optimal Accuracy")
plt_box_acc
AccMea %>%
spread(Pred_type,
Acc) %>%
mutate(dist_type = ifelse(separation < switch_point, "Close", "Far"),
Diff_Opt_m_Acc = Optimal - Actual,
Diff_Opt_m_Exp = Optimal - Expected,
Diff_Opt_d_Exp = Expected/Optimal) %>%
group_by(participant, condition, dist_type) %>%
summarise(Diff_Opt_m_Acc = mean(Diff_Opt_m_Acc),
Diff_Opt_m_Exp = mean(Diff_Opt_m_Exp),
Diff_Opt_d_Exp = mean(Diff_Opt_d_Exp)) %>%
ggplot(aes(dist_type, Diff_Opt_d_Exp,
fill = condition,
colour = condition)) +
geom_boxplot(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw() +
scale_x_discrete("Distance Type") +
scale_y_continuous("Expected Accuracy / Optimal Accuracy") + scale_y_continuous(limits = c(0,1))
plt_box_acc + scale_y_continuous(limits = c(0,1))
AccMea %>%
spread(Pred_type,
Acc) %>%
mutate(dist_type = ifelse(separation < switch_point, "Close", "Far"),
Diff_Opt_m_Acc = Optimal - Actual,
Diff_Opt_m_Exp = Optimal - Expected,
Diff_Opt_d_Exp = Expected/Optimal) %>%
group_by(participant, condition, dist_type) %>%
summarise(Diff_Opt_m_Acc = mean(Diff_Opt_m_Acc),
Diff_Opt_m_Exp = mean(Diff_Opt_m_Exp),
Diff_Opt_d_Exp = mean(Diff_Opt_d_Exp)) %>%
ggplot(aes(dist_type, Diff_Opt_d_Exp,
fill = condition,
colour = condition)) +
geom_boxplot(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
theme_bw() +
scale_x_discrete("Distance Type") +
scale_y_continuous("Expected Accuracy / Optimal Accuracy") + scale_y_continuous(limits = c(0.5,1))
plt_box_acc + scale_y_continuous(limits = c(0.5,1))
View(AccMea)
df_part2 %>%
group_by(participant, bias_type, dist_type) %>%
summarise(acc = mean(accuracy)) %>%
ggplot(aes(dist_type, acc, fill = bias_type)) +
geom_boxplot()
