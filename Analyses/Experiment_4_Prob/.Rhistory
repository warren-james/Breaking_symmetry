facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
check <- test2 %>%
mutate(st_box = # ifelse(bias_type == "Biased", standard_boxes,
ifelse(lcr == 0, "centre",
ifelse(lcr == lcr2 & standard_boxes == "most likely",
"most likely", "least likely")))#)
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
plt_box_1 <- df_part2 %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(standard_boxes == "centre", 1, 0),
ML = ifelse(standard_boxes == "most likely", 1, 0),
LL = ifelse(standard_boxes == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
plt_box_1
check <- test2 %>%
mutate(st_box = # ifelse(bias_type == "Biased", standard_boxes,
ifelse(lcr == 0, "centre",
ifelse(lcr == lcr2 & standard_boxes == "most likely",
"most likely", "least likely")))#)
# if the above works, should get a nice plot...
# but it doesn't work just yet
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL)
test <- check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL)
range(test$ML)
range(test$LL)
head(test)
View(test)
# labels should reflect participants' own biases in the "symmetric" condition
test <- df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(max(`-1`) > max(`1`), -1, 1),
least = ifelse(max(`-1`) < max(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least))) %>%
select(participant, bias_type, standard_boxes, lcr2)
View(test)
df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(max(`-1`) > max(`1`), -1, 1),
least = ifelse(max(`-1`) < max(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)))
df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(max(`-1`) > max(`1`), -1, 1),
least = ifelse(max(`-1`) < max(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
sum = sum(`-1`,`0`,`1`),
per_1 = `1`/sum,
per_0 = `0`/sum,
per_m1 = `-1`/sum)
df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(max(`-1`) < max(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
sum = sum(`-1`,`0`,`1`),
per_1 = `1`/sum,
per_0 = `0`/sum,
per_m1 = `-1`/sum)
check <- test2 %>%
mutate(st_box = ifelse(lcr2 == 0, "centre",
ifelse(lcr2 == lcr & standard_boxes == "most likey", "most likely",
"least likely")))
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
check <- test2 %>%
mutate(st_box = ifelse(lcr2 == 0, "centre",
ifelse(lcr2 == lcr & standard_boxes == "most likely", "most likely",
"least likely")))
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
View(test)
df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)))
# labels should reflect participants' own biases in the "symmetric" condition
test <- df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
n = ifelse(lcr2 == 0, `0`,
ifelse(lcr2 == 1, `1`, `-1`)))
View(test)
test <- df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
n = ifelse(lcr2 == 0, max(`0`),
ifelse(lcr2 == 1, max(`1`), max(`-1`))))
View(test)
test <- df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
n = ifelse(lcr2 == 0, max(`0`),
ifelse(lcr2 == 1, max(`1`), max(`-1`)))) %>%
select(participant, bias_type, standard_boxes, lcr2, most, least)
head(test)
check <- test2 %>%
mutate(st_box = ifelse(lcr == 0, "Centre",
ifelse(lcr == most, "most likely", "least likely")))
test2 <- merge(df_part2, test)
check <- test2 %>%
mutate(st_box = ifelse(lcr == 0, "Centre",
ifelse(lcr == most, "most likely", "least likely")))
head(check)
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
check <- test2 %>%
mutate(st_box = ifelse(bias_type == "Biased", standard_boxes,
ifelse(lcr == 0, "centre",
ifelse(lcr == most, "most likely", "least likely"))))
check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
plt_box_1
plt_fix <- check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL) %>%
gather(centre:LL,
key = "prop_type",
value = "proportion") %>%
mutate(prop_type = factor(prop_type, c("centre", "ML", "LL"),
labels = c("Centre", "Most Likely", "Least Likely"))) %>%
ggplot(aes(dist_type, proportion, fill = bias_type)) +
geom_boxplot() +
# ggplot(aes(proportion, fill = prop_type)) +
# geom_density(alpha = .3) +
# geom_histogram(position = "dodge") +
scale_y_continuous(element_blank(),
breaks = seq(0,1,.2),
labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~prop_type) +
see::scale_fill_flat(name = "Condition") +
scale_x_discrete("Delta") +
theme_bw()
??grid.arange
??grid.arrange
gridExtra::grid.arrange(plt_box_1, plt_fix)
plt_fix <- check %>%
ungroup() %>%
group_by(participant, bias_type, dist_type) %>%
mutate(centre = ifelse(st_box == "centre", 1, 0),
ML = ifelse(st_box == "most likely", 1, 0),
LL = ifelse(st_box == "least likely", 1, 0),
n = n()) %>%
summarise(centre = mean(centre),
ML = mean(ML),
LL = mean(LL)) %>%
mutate(total = centre + ML + LL)
range(plt_fix$LL)
range(plt_fix$ML)
View(plt_fix)
View(test)
df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
n = ifelse(lcr2 == 0, max(`0`),
ifelse(lcr2 == 1, max(`1`), max(`-1`))))
test <- df_part2 %>%
select(participant, bias_type, lcr, standard_boxes) %>%
group_by(participant, bias_type, lcr, standard_boxes) %>%
summarise(n = n()) %>%
ungroup() %>%
complete(lcr, nesting(participant, bias_type, standard_boxes), fill = list(n = 0)) %>%
ungroup() %>%
group_by(participant, bias_type) %>%
spread(lcr, n) %>%
mutate(most = ifelse(sum(`-1`) > sum(`1`), -1, 1),
least = ifelse(sum(`-1`) < sum(`1`), -1, 1),
# need to make sure that the biased group does not change
# will need to do this in the main df
lcr2 = ifelse(standard_boxes == "centre", 0,
ifelse(standard_boxes == "most likely", most, least)),
n = ifelse(lcr2 == 0, max(`0`),
ifelse(lcr2 == 1, max(`1`), max(`-1`))))
View(test)
150/(150 + 166)
166/(150 + 166)
unique(df_part2$lcr)
166/(150 + 166 + 1)
150/(150 + 166 + )
150/(150 + 166 + 1)
check %>% group_by(bias_type, st_box) %>% filter(participant == 10)
check %>% group_by(bias_type, st_box) %>% filter(participant == 10)
check %>% group_by(bias_type, st_box) %>% filter(participant == 10) %>% summarise(m = mean(lcr2))
check %>% group_by(bias_type, st_box) %>% filter(participant == 10) %>% mutate(most = ifelse(st_box == "most likely", 1, 0), least = ifelse(st_box = "least likely", 1, 0)) %>% summarise(m_most = mean(most), m_least = mean(least))
check %>% group_by(bias_type, st_box) %>% filter(participant == 10) %>% mutate(most = ifelse(st_box == "most likely", 1, 0), least = ifelse(st_box == "least likely", 1, 0)) %>% summarise(m_most = mean(most), m_least = mean(least))
check %>% group_by(bias_type) %>% filter(participant == 10) %>% mutate(most = ifelse(st_box == "most likely", 1, 0), least = ifelse(st_box == "least likely", 1, 0)) %>% summarise(m_most = mean(most), m_least = mean(least))
check %>%
group_by(bias_type) %>% filter(participant == 10) %>%
mutate(most = ifelse(st_box == "most likely", 1, 0),
least = ifelse(st_box == "least likely", 1, 0),
centre = idelse(st_box == "centre", 1, 0)) %>%
summarise(m_most = mean(most),
m_least = mean(least),
m_cent = mean(centre))
check %>%
group_by(bias_type) %>% filter(participant == 10) %>%
mutate(most = ifelse(st_box == "most likely", 1, 0),
least = ifelse(st_box == "least likely", 1, 0),
centre = ifelse(st_box == "centre", 1, 0)) %>%
summarise(m_most = mean(most),
m_least = mean(least),
m_cent = mean(centre))
head(df_part2)
