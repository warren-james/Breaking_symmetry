Worst = pmin(Expected, Centre, Side_S, Side_S),
ymin_Best = min(Best)-.01,
ymax_Best = max(Best),
ymin_Worst = min(Worst),
ymax_Worst = max(Worst)) %>%
ggplot(aes(x = sep_factor, Expected)) +
geom_ribbon(aes(x = sep_factor,
ymin = ymin_Worst,
ymax = ymax_Worst,
fill = "red"),
alpha = .3) +
geom_ribbon(aes(x = sep_factor,
ymin = ymin_Best,
ymax = ymax_Best,
fill = "green"),
alpha = .3) +
geom_line(aes(group = participant), alpha = .3) +
scale_y_continuous("Expected Accuracy", labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = "")),
breaks = c(1:6),
labels = c("~90%", "~50% - 1", "~50%", "~50% + 1", "~50% + 2", "~10%")) +
# see::scale_color_flat() +
# see::scale_fill_flat() +
# ggsci::scale_fill_lancet() +
# ggsci::scale_colour_lancet() +
scale_colour_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2") +
# see::scale_color_pizza_d() +
# see::scale_fill_pizza() +
guides(fill = F) +
theme_bw() +
theme(axis.text = element_text(size = 7),
axis.title.y = element_text(size = 7),
axis.title.x = element_text(size = 7))
plt_acc_regions
# save
ggsave(plt_acc_regions, file = "../../Figures/Experiment_3_Hoop_size/plt_acc_regions.png",
width = 5.6,
height = 3)
# cobine with ridges
plt_save <- gridExtra::grid.arrange(plt_ridges, plt_acc_regions, ncol = 2)
ggsave(plt_save, file = paste(save_route, "exp_acc_pos_combined.png", sep = ""),
height = 3,
width = 5.6)
cat = "greg"
print(cat)
test <- function(cat) {
print(cat)
}
test(cat = cat)
test(cat = "Tom")
print(cat)
a = 2
a * 4
test <- function(a) {
a = a *5
print(a)
}
test(a)
a
test(a)
#### level 3 - 2nd Semester 2017/18 ####
# Part 1 Accuracy measure script
# Script for the Hoop Size version of the throwing task
# This script reads in the data for participants' accuracy
# in the first session.
# Written by Warren James
#### Libraries needed ####
library(tidyverse)
#### Constants ####
Hoop_size <- 0.46
#### Created functions ####
# This is used to get average distance between large and small hoop
# accuracy.
get_avg <- function(df, index, participant){
sum(df[,index][df[,1] == participant])/2
}
#### read in dataset ####
beanbagdat <- read.csv("data/Part_1_measures.txt", sep = "\t")
# num_particiapnts
num_particiapnts <- length(unique(paste(beanbagdat$experimenter,
beanbagdat$participant)))
#### collapse across directions ####
# sort data
beanbagdat <- beanbagdat %>%
mutate(participant = paste(experimenter, participant, sep = "_")) %>%
group_by(participant, slab, hoop_size) %>%
summarise(inhoop = sum(inhoop)) %>%
ungroup() %>%
mutate(acc = inhoop/18,
off_set = log((1-0.01)/0.01),
participant_num = factor(participant,
labels = c(seq(1, num_particiapnts, 1))))
#### get accuracy over distance, for each participant and hoop size ####
m = glm(data=beanbagdat, acc~slab:hoop_size:participant, binomial, offset=off_set)
beanbagdat$p = predict(m, type="response")
# tidy up
rm(m)
#### make the plots ####
plt <- beanbagdat %>%
ggplot(aes(slab*Hoop_size,
acc,
colour = hoop_size)) +
geom_point(position = position_jitter(width = .1, height = 0)) +
theme_bw() +
see::scale_color_flat() +
facet_wrap(~participant, nrow = 4) +
geom_smooth(method = glm,
method.args = list(family = "binomial"),
aes(y = p),
fullrange = T, se = F) +
theme(legend.position = "bottom")
plt <- ggplot(beanbagdat, aes(x=slab*Hoop_size,
y=acc,
colour = hoop_size))
plt <- plt + geom_point(position=position_jitter(width=.1,height=.0))
plt <- plt + theme_bw()
plt <- plt + scale_y_continuous(name="Accuracy")
plt <- plt + facet_wrap(~participant_num, nrow=4)
plt <- plt + scale_x_continuous(name="Delta (Metres)",
limit=c(0,12),
breaks = c(3,6,9,12))
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=p),
fullrange=T, se=F)
plt <- plt + scale_colour_discrete(name = "Hoop Size",
labels=c("Large", "Small"))
# plt <- plt + ggtitle("Session 1 accuracy measures")
# plt <- plt + theme(plot.title = element_text(hjust = 0.5))
plt <- plt + theme(legend.position = "bottom")
plt
#### level 3 - 2nd Semester 2017/18 ####
# Part 2 Standing position script
# This script looks at where participants stood on each trial and
# also where they should have stood for the optimal strategy. Also,
# it looks at where they would have stood if they were trying to
# achieve equal accuracy for both hoop sizes.
# Written by Warren James
#### Load in the libraries ####
library(tidyverse)
library(reshape2)
library(lme4)
#### Constants ####
Hoop_size <- 0.46
#### Created functions ####
# normalising distance function
norm_dist <- function(x,y){
2*(x - (y*-1))/(y - (y*-1))-1
}
#### read in the data ####
dat <- read.csv("data/Part_2/Part2_measures.txt", sep = "\t")
#### Pre-process data ####
# sort out participant coding
dat$participant <- paste(dat$experimenter, dat$participant, sep = "_")
dat$participant <- as.factor(dat$participant)
# drop experimenter column
dat <- dat[ , !(names(dat) %in% "experimenter")]
# make all colour values the same
# sort red
dat$colour[dat$colour == "Red"] <- "R"
# sort yellow
dat$colour[dat$colour == "y"] <- "Y"
dat$colour[dat$colour == " Y"] <- "Y"
dat$colour[dat$colour == "Y "] <- "Y"
dat$colour[dat$colour == "Y  "] <- "Y"
dat$colour[dat$colour == "Y   "] <- "Y"
dat$colour[dat$colour == "Yellow"] <- "Y"
dat$colour[dat$colour == "Yellow "] <- "Y"
dat$colour[dat$colour == "yellow"] <- "Y"
# sort blue
dat$colour[dat$colour == "Blue"] <- "B"
dat$colour[dat$colour == "Blue "] <- "B"
dat
lad( file = "scratch/df_part2_raw")
load( file = "scratch/df_part2_raw")
source("~/GitHub/Breaking_symmetry/Analyses/Experiment_1_Hoop_size/6_val_acc_model.R", echo=TRUE)
dat
dat <- as_tibble(dat)
dat
select(dat, hoop_pos)
View(dat)
dat <- as_tibble(dat) %>%
select(-hoop_pos, R, Y, B, B_N_Size, Y_N_Size, R_B_Size)
dat <- as_tibble(dat) %>%
select(-hoop_pos, R, Y, B, B_N_Size, Y_N_Size, R_N_Size)
dat
dat <- as_tibble(dat) %>%
select(-hoop_pos, -R, -Y, -B, -B_N_Size, -Y_N_Size, -R_N_Size)
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
select(-hoop_pos, -R, -Y, -B, -B_N_Size, -Y_N_Size, -R_N_Size)
dat
?case_when
dat <- as_tibble(dat) %>%
mutate(n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size
))
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size
))
dat
dat$n_size
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", n_size, "other"))
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"))
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else(size == "other" & n_size == "north", "small", "north"))
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else(size == "other" & n_size == "north", "small", "north")) %>%
select(participant, trial, colour, direction, subject_position, n_size, size)
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else(size == "other" && n_size == "north", "small", "north")) %>%
select(participant, trial, colour, direction, subject_position, n_size, size)
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else((size == "other" & n_size == "north"), "small", "north")) %>%
select(participant, trial, colour, direction, subject_position, n_size, size)
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else((size == "other" && n_size == "north"), "small", "north")) %>%
select(participant, trial, colour, direction, subject_position, n_size, size)
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else((size == "other" & n_size == "north"), "small", "north")) %>%
select(participant, trial, colour, direction, subject_position, n_size, size)
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"),
size = if_else((size == "other" & n_size == "north"), "small", "north")) %>%
select(participant, trial, colour, direction, subject_position, n_size, size)
dat
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ B_N_Size,
colour == "Y" ~ Y_N_Size,
colour == "R" ~ R_N_Size),
size = if_else(direction == "North", as.character(n_size), "other"))
dat$size[which(dat$size == "other")]
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", as.character(n_size), "other"))
dat
dat$n_size
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, n_size = 1))
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, n_size = 1))
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, n_size + 1))
summary(dat)
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, n_size + 1 %% 2))
select(dat, n_size, size)
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2))
select(dat, n_size, size)
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2)) %>%
select(participant, direction, n_size, size)
dat
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size)) %>%
select(participant, direction, n_size, size)
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size)) %>%
select(participant, direction, standing_position, size)
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size)) %>%
select(participant, direction, standing_pos, size)
dat
load( file = "scratch/df_part2_raw")
dat
head(dat
)
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size)) %>%
select(participant, direction, subject_position, size, hoop_pos)
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos)) %>%
select(participant, direction, subject_position, size, hoop_pos)
load( file = "scratch/df_part2_raw")
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos)) %>%
select(participant, direction, subject_position, size, hoop_pos)
dat
dat <- as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos)) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy)
load("scratch/df_part2_raw") %>%
as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos)) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy)
load("scratch/df_part2_raw") %>%
as_tibble(dat)
load("scratch/df_part2_raw")
dat %>%
as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos)) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy)
dat %>%
as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos),
delta = hoop_pos - subject_position) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy)
dat %>%
as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos),
delta = hoop_pos - subject_position) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy, delta)
dat %>%
as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos),
delta = abs(hoop_pos - subject_position)) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy, delta)
ggplot(dat, aes(delta, accuracy, colour = size)) + geom_point() +
facet_wrap(~participant)
dat %>%
as_tibble(dat) %>%
mutate(
n_size = case_when(
colour == "B" ~ as.numeric(B_N_Size),
colour == "Y" ~ as.numeric(Y_N_Size),
colour == "R" ~ as.numeric(R_N_Size)),
size = if_else(direction == "North", n_size, (n_size + 1) %% 2),
size = if_else(size ==0 , 2, size),
hoop_pos = if_else(direction == "South", -hoop_pos, hoop_pos),
delta = abs(hoop_pos - subject_position)) %>%
select(participant, direction, subject_position, size, hoop_pos, accuracy, delta) -> dat
ggplot(dat, aes(delta, accuracy, colour = size)) + geom_point() +
facet_wrap(~participant)
