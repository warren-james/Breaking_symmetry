med = median(prop))
HDI_interaction <- draws %>%
group_by(Bias_type, Dist_type) %>%
summarise(lower = hdi(prop)[,1],
mu = mean(prop),
upper = hdi(prop)[,2],
med = median(prop))
# Diff values
Diff_Bias <- draws %>%
spread(Bias_type,
prop) %>%
mutate(diff = Bias - Symmetric,
Bias_bigger = ifelse(diff > 0, 1, 0))
D_bias_lower <- hdci(Diff_Bias$diff)[,1]
D_bias_mu <- mean(Diff_Bias$diff)
D_bias_upper <- hdci(Diff_Bias$diff)[,2]
p_bias_bigger <- mean(Diff_Bias$Bias_bigger)
Diff_Dist <- draws %>%
spread(Dist_type,
prop) %>%
mutate(diff = Far - Close,
Far_bigger = ifelse(diff > 0, 1, 0))
D_dist_lower <- hdci(Diff_Dist$diff)[,1]
D_dist_mu <- mean(Diff_Dist$diff)
D_dist_upper <- hdci(Diff_Dist$diff)[,2]
p_far_bigger <- mean(Diff_Dist$Far_bigger)
Diff_Interaction_compdist <- Diff_Dist %>%
group_by(Bias_type) %>%
summarise(p_Far_bigger = mean(Far_bigger),
lower = hdci(diff)[,1],
mu = mean(diff),
upper = hdci(diff)[,2],
med = median(diff))
Diff_Interaction_compbias <- Diff_Bias %>%
group_by(Dist_type) %>%
summarise(p_Bias_bigger = mean(Bias_bigger),
lower = hdci(diff)[,1],
mu = mean(diff),
upper = hdci(diff)[,2],
med = median(diff))
load("../Analyses/Experiment_3_Hoop_size/modelling/model_outputs/m1")
load("../Analyses/Experiment_3_Hoop_size/modelling/model_outputs/m1_draws")
plt_estimates <- draws$plt_estimates
plt_estimates
p_above_5 <- draws$Prop_above.5
HDI_all <- draws$draws_HDI[[2]]
load("../Analyses/Experiment_2_Two_throw/modelling/model_outputs/m1_pos")
load("../Analyses/Experiment_2_Two_throw/modelling/model_outputs/m1_pos_draws")
# example distributions
plt_examples <- draws$Plots[1][[1]]
# plt_difference
plt_difference <- draws$Plots[3][[1]] +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat()
# show this
gridExtra::grid.arrange(plt_examples, plt_difference)
draws$Plots
plt_difference <- draws$Plots[3][[1]]
plt_difference
plt_difference[["data"]]
plt_difference <- draws$Plots[3][[1]][["data"]]
plt_difference
plt_examples <- draws$Plots[1][[1]][["data"]]
plt_examples
draws$Plots[1][[1]]
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_Type, c("Close", "Mid", "Far"))) %>%
ggplot(aes(prop,
colour = Num_throws,
fill = Num_throws)) +
geom_density(alpha = .3)
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far"))) %>%
ggplot(aes(prop,
colour = Num_throws,
fill = Num_throws)) +
geom_density(alpha = .3)
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far"))) %>%
ggplot(aes(prop,
colour = Num_throws,
fill = Num_throws)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_Type)
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_Throws == "One_Throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_throws,
fill = Num_throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw()
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_Throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw()
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw()
draws$Plots[1][[1]]
draws$Plots[1][[1]]
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian()
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta", limits = c(0, .45)) +
coord_cartesian()
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian(expand = F)
"No. Throws"
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian(expand = F) +
guides(fill = "No. Throws",
colour = "No. Throws")
draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian(expand = F) +
guides(fill = guide_legend(title = "No. Throws"))
plt_examples <- draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian(expand = F) +
guides(fill = guide_legend(title = "No. Throws"),
colour = guide_legend(title = "No. Throws"))
plt_examples
# example distributions
plt_examples <- draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian(expand = F) +
guides(fill = guide_legend(title = "No. Throws"),
colour = guide_legend(title = "No. Throws"))
# plt_difference
plt_difference <- draws$Plots[3][[1]] +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat()
# show this
gridExtra::grid.arrange(plt_examples, plt_difference)
load("../Analyses/Experiment_2_Two_throw/modelling/model_outputs/m1_pos")
load("../Analyses/Experiment_2_Two_throw/modelling/model_outputs/m1_pos_draws")
# example distributions
plt_examples <- draws$Plots[1][[1]][["data"]] %>%
mutate(Dist_Type = factor(Dist_type, c("Close", "Mid", "Far")),
Num_Throws = ifelse(Num_throws == "One_throw", "One", "Two")) %>%
ggplot(aes(prop,
colour = Num_Throws,
fill = Num_Throws)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
facet_wrap(~Dist_Type) +
theme_bw() +
scale_x_continuous("Normalised Delta") +
coord_cartesian(expand = F) +
guides(fill = guide_legend(title = "No. Throws"),
colour = guide_legend(title = "No. Throws"))
# plt_difference
plt_difference <- draws$Plots[3][[1]] +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat()
# show this
gridExtra::grid.arrange(plt_examples, plt_difference)
View(draws)
draws
draws$Plots
draws$HDIs[[2]]
HDI_two_throw_overall_diff <- draws$HDIs[[2]]
HDI_two_throw_mean_pos_overall <- draws$HDIs[[1]]
mu <- HDI_two_throw_mean_pos_overall$mean
mu
lower <- HDI_two_throw_mean_pos_overall$lower
mu <- HDI_two_throw_mean_pos_overall$mean
lower <- HDI_two_throw_mean_pos_overall$lower
upper <- HDI_two_throw_mean_pos_overall$upper
round(mu[1], digits = 3))
draws$HDIs[[3]] %>%
filter(Dist_type == "Close")
mu_close <- HDI_tt_close$mean
lower_close <- HDI_tt_close$lower
upper_close <- HDI_tt_close$upper
HDI_tt_close <- draws$HDIs[[3]] %>%
filter(Dist_type == "Close")
mu_close <- HDI_tt_close$mean
lower_close <- HDI_tt_close$lower
upper_close <- HDI_tt_close$upper
HDI_tt_diff <- draws$HDIs[[4]]
HDI_tt_diff
draws
draws$Above_0[[2]] %>%
filter(Dist_type == "Close")
P_close <- draws$Above_0[[2]] %>%
filter(Dist_type == "Close")
P_close
P_close$above0
P_close$above0*100
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_S_dt")
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_S_dt_draws")
setwd("F:/Uni/Github/Breaking_symmetry/Supplementary")
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_S_dt")
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_S_dt_draws")
summary(m1)
summary(bm_fix_S_dt)
summary(bm_fix_like_dt)
head(draws)
df_prop_S <- draws$Draws_df
head(df_prop_S)
draws$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
df_prop_S <- draws$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
gridExtra::grid.arrange(plt_me_Dist, plt_me_Bias, plt_interaction)
head(df_prop_S)
df_prop_S %>%
ggplot(aes(prop,
colour = Dist_type,
fill = Dist_type)) +
geom_density(alpha = .3)
draws
rm(list = ls())
# library
library(tidybayes)
library(tidyverse)
# Load in everything from the modelling
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_like_dt")
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_like_dt_draws")
draws <- fix_like_post$draws_df %>%
mutate(prop = boot::inv.logit(estimate)) %>%
select(-estimate)
# Proportion fixations to most likely side
plt_me_Bias <- draws %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3) +
theme_bw() +
theme(axis.title.x = element_blank()) +
labs(fill = "Bias Type",
colour = "Bias Type") +
#       "Proportion of Fixations to Most Likely Side") +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous(labels = scales::percent_format(accuracy = 1))
plt_me_Dist <- draws %>%
ggplot(aes(prop,
colour = Dist_type,
fill = Dist_type)) +
geom_density(alpha = .3) +
theme_bw() +
theme(axis.title.x = element_blank()) +
labs(fill = "Distance Type",
colour = "Distance Type") +
#       x = "Proportion of Fixations to Most Likely Side") +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous(labels = scales::percent_format(accuracy = 1))
plt_interaction <- fix_like_post$plt_estimates +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat() +
labs(x = "Proportion of Fixations to Most Likely Side",
colour = "Bias Type",
fill = "Bias Type") +
scale_x_continuous(labels = scales::percent_format(accuracy = 1))
gridExtra::grid.arrange(plt_me_Dist, plt_me_Bias, plt_interaction)
# HDI_values
HDI_Bias <- draws %>%
group_by(Bias_type) %>%
summarise(lower = hdi(prop)[,1],
mu = mean(prop),
upper = hdi(prop)[,2],
med = median(prop))
HDI_Dist <- draws %>%
group_by(Dist_type) %>%
summarise(lower = hdi(prop)[,1],
mu = mean(prop),
upper = hdi(prop)[,2],
med = median(prop))
HDI_interaction <- draws %>%
group_by(Bias_type, Dist_type) %>%
summarise(lower = hdi(prop)[,1],
mu = mean(prop),
upper = hdi(prop)[,2],
med = median(prop))
# Diff values
Diff_Bias <- draws %>%
spread(Bias_type,
prop) %>%
mutate(diff = Bias - Symmetric,
Bias_bigger = ifelse(diff > 0, 1, 0))
D_bias_lower <- hdci(Diff_Bias$diff)[,1]
D_bias_mu <- mean(Diff_Bias$diff)
D_bias_upper <- hdci(Diff_Bias$diff)[,2]
p_bias_bigger <- mean(Diff_Bias$Bias_bigger)
Diff_Dist <- draws %>%
spread(Dist_type,
prop) %>%
mutate(diff = Far - Close,
Far_bigger = ifelse(diff > 0, 1, 0))
D_dist_lower <- hdci(Diff_Dist$diff)[,1]
D_dist_mu <- mean(Diff_Dist$diff)
D_dist_upper <- hdci(Diff_Dist$diff)[,2]
p_far_bigger <- mean(Diff_Dist$Far_bigger)
Diff_Interaction_compdist <- Diff_Dist %>%
group_by(Bias_type) %>%
summarise(p_Far_bigger = mean(Far_bigger),
lower = hdci(diff)[,1],
mu = mean(diff),
upper = hdci(diff)[,2],
med = median(diff))
Diff_Interaction_compbias <- Diff_Bias %>%
group_by(Dist_type) %>%
summarise(p_Bias_bigger = mean(Bias_bigger),
lower = hdci(diff)[,1],
mu = mean(diff),
upper = hdci(diff)[,2],
med = median(diff))
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_S_dt")
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_output/bm_fix_S_dt_draws")
df_prop_S <- draws$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
ffix_S_post
fix_S_post
fix_like_post
fix_S_post
draws$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
fix_S_post$draws_df
df_prop_S <- fix_S_post$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
boot::inv.logit(6)
boot::inv.logit(1.8)
fix_S_post$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
library(tidyverse)
fix_S_post$Draws_df %>%
mutate(prop = boot::inv.logit(estimate))
df_prop_S <- fix_S_post$Draws_df
df_prop_S <- fix_S_post$draws_df %>%
mutate(prop = boot::inv.logit(estimate))
plt_S_Dist <- df_prop_S %>%
ggplot(aes(prop,
colour = Dist_type,
fill = Dist_type)) +
geom_density(alpha = .3)
plt_S_Dist
df_prop_S %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3)
df_prop_S %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_type)
gridExtra::grid.arrange(plt_S_Dist, plt_S_Bias, plt_S_overall)
# something like the first set of plots above
plt_S_Dist <- df_prop_S %>%
ggplot(aes(prop,
colour = Dist_type,
fill = Dist_type)) +
geom_density(alpha = .3) +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat()
plt_S_Bias <- df_prop_S %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3) +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat()
plt_S_overall <- df_prop_S %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_type) +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat()
gridExtra::grid.arrange(plt_S_Dist, plt_S_Bias, plt_S_overall)
gridExtra::grid.arrange(plt_S_Dist, plt_S_Bias, plt_S_overall)
# something like the first set of plots above
plt_S_Dist <- df_prop_S %>%
ggplot(aes(prop,
colour = Dist_type,
fill = Dist_type)) +
geom_density(alpha = .3) +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
plt_S_Bias <- df_prop_S %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3) +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
plt_S_overall <- df_prop_S %>%
ggplot(aes(prop,
colour = Bias_type,
fill = Bias_type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_type) +
theme_bw() +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
theme(axis.title.y = element_blank())
gridExtra::grid.arrange(plt_S_Dist, plt_S_Bias, plt_S_overall)
gridExtra::grid.arrange(plt_S_Dist, plt_S_Bias, plt_S_overall)
