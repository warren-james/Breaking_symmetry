ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(aes(y = success),
method = glm,
method.args = list(family = "binomial"),
se = F)
head(df_sim)
df_sim %>%
filter(delta > 1) %>%
mutate(delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
facet_wrap(~delta, scales = "free")
df_sim %>%
filter(delta > 1) %>%
mutate(delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
facet_wrap(~delta)
df_sim %>%
filter(delta > 1) %>%
mutate(delta = as.factor(delta),
lower = delta - target_size,
upper = delta + target_size) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(xintercept = upper,
linetype = "dashed") +
geom_vline(xintercept = lower,
linetype = "dashed")
facet_wrap(~delta)
# plots of ending position
df_sim %>%
filter(delta > 1) %>%
mutate(
lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(xintercept = upper,
linetype = "dashed") +
geom_vline(xintercept = lower,
linetype = "dashed") +
facet_wrap(~delta)
df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta))
df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(aes(xintercept = upper),
linetype = "dashed") +
geom_vline(aes(xintercept = lower),
linetype = "dashed") +
facet_wrap(~delta)
df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(aes(xintercept = upper),
linetype = "dashed") +
geom_vline(aes(xintercept = lower),
linetype = "dashed") +
facet_wrap(~delta, scales = "free")
install.packages("patchwork")
library(patchwork)
plts <- plt_curve + plt_dist
# plot a fit
plt_curve <- df_sim %>%
group_by(delta) %>%
mutate(acc = mean(success)) %>%
ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(aes(y = success),
method = glm,
method.args = list(family = "binomial"),
se = F)
# plots of ending position
plt_dist <- df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(aes(xintercept = upper),
linetype = "dashed") +
geom_vline(aes(xintercept = lower),
linetype = "dashed") +
facet_wrap(~delta, scales = "free")
# put together
library(patchwork)
plts <- plt_curve + plt_dist
plts
plt_curve <- df_sim %>%
group_by(delta) %>%
mutate(acc = mean(success)) %>%
ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(aes(y = success),
method = glm,
method.args = list(family = "binomial"),
se = F) +
theme_bw()
# plots of ending position
plt_dist <- df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(aes(xintercept = upper),
linetype = "dashed") +
geom_vline(aes(xintercept = lower),
linetype = "dashed") +
facet_wrap(~delta, scales = "free") +
theme_bw() +
theme(legend.position = "none")
# put together
library(patchwork)
plts <- plt_curve + plt_dist
plts
df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(aes(xintercept = upper),
linetype = "dashed") +
geom_vline(aes(xintercept = lower),
linetype = "dashed") +
facet_wrap(~delta, scales = "free") +
theme_bw() +
theme(legend.position = "none")
plts <- plt_curve + plt_dist
plts
plt_dist <- df_sim %>%
filter(delta > 1) %>%
mutate(lower = delta - target_size,
upper = delta + target_size,
delta = as.factor(delta)) %>%
ggplot(aes(end_pos, colour = delta,
fill = delta)) +
geom_histogram(alpha = .3) +
geom_vline(aes(xintercept = upper),
linetype = "dashed") +
geom_vline(aes(xintercept = lower),
linetype = "dashed") +
facet_wrap(~delta) +#, scales = "free") +
theme_bw() +
theme(legend.position = "none")
# put together
library(patchwork)
plts <- plt_curve + plt_dist
plts
((1*805) + (5 * 1264) + (10 * 106))
((1*805) + (5 * 1264) + (10 * 106)) * 12
((1 * 820) + (5 * 1296) + (10 * 116) + (20 * 223) + (50 * 46))
((1 * 820) + (5 * 1296) + (10 * 116) + (20 * 223) + (50 * 46)) * 12
R.version
setwd("F:/Uni/Github/Breaking_symmetry/Supplementary")
library(tidyverse)
library(brms)
library(tidybayes)
load("../Analyses/Experiment_5_Unequal_Reward/scratch/model_outputs/m_brms_ri")
#
get_priors(m_brms_ri)
prior_summary(m_brms_ri)
load("../Analyses/Experiment_5_Unequal_Reward/scratch/data/model_data")
source("extract_draws_functions/Reward_draws.R")
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "Intercept")),
chains = 1,
iter = 4000,
warmup = 2000,
ssample_prior = "only")
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "Intercept")),
chains = 1,
iter = 4000,
warmup = 2000,
sample_prior = "only")
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "Intercept")),
chains = 1,
iter = 4000,
warmup = 2000,
sample_prior = "only",
control = list(adapt_delta = .9))
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .9))
summary(Reward_priors)
launch_shinystan(Reward_priors)
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,3)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99))
draws_factor(Reward_priors)
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate))
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop, colour = Gamble_Type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_type)
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop, colour = Gamble_Type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_Type)
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99))
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99, max_treedepth = 15))
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop, colour = Gamble_Type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_Type)
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99, max_treedepth = 15))
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop, colour = Gamble_Type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_Type)
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,1)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99, max_treedepth = 15))
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop, colour = Gamble_Type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_Type)
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99, max_treedepth = 15))
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop, colour = Gamble_Type)) +
geom_density(alpha = .3) +
facet_wrap(~Dist_Type)
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop,
colour = Gamble_Type,
fill = Gamble_Type)) +
geom_density(alpha = .3,
kernel = "biweight") +
facet_wrap(~Dist_Type)
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop,
colour = Gamble_Type,
fill = Gamble_Type)) +
geom_density(alpha = .3,
kernel = "biweight") +
scale_x_continuous(expression(Delta)) +
facet_wrap(~Dist_Type)
draws_factor(Reward_priors) %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop,
colour = Gamble_Type,
fill = Gamble_Type)) +
see::scale_color_flat() +
see::scale_fill_flat() +
geom_density(alpha = .3,
kernel = "biweight") +
scale_x_continuous(expression(Delta)) +
facet_wrap(~Dist_Type) +
theme_bw()
head(model_data)
Reward_m1 <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
control = list(adapt_delta = .99, max_treedepth = 15))
draws_df <- draws_factor(Reward_m1) %>%
mutate(prop = boot::inv.logit(estimate))
head(draws_df)
Reward_m1 <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
control = list(adapt_delta = .99, max_treedepth = 15))
summary(Reward_m1)
# library
library(tidybayes)
library(tidyverse)
library(brms)
library(png)
library(grid)
load("../Analyses/Experiment_5_Unequal_Reward/scratch/data/model_data")
source("extract_draws_functions/Reward_draws.R")
Reward_priors <- brm(Norm_Dist ~ dist_type*Gamble_Type + (dist_type*Gamble_Type|Participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "dist_typefar:Gamble_TypeUnequal"),
set_prior("student_t(3,0,.5)",
class = "b",
coef = "Gamble_TypeUnequal"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
chains = 1,
iter = 10000,
warmup = 5000,
sample_prior = "only",
control = list(adapt_delta = .99, max_treedepth = 15))
