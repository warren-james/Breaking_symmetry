ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
HS_priors <- tibble(dist = rep(dists, each = 10000),
intercept = rstudent_t(30000, 3, 0, 1)) %>%
mutate(norm_pos = ifelse(dist == "close", close,
ifelse(dist == "mid", mid, far)),
estimate = intercept + norm_pos * rstudent_t(1, 3, 0, 3),
prop = boot::inv.logit(estimate))
# make plot
HS_priors %>%
ggplot(aes(prop, colour = dist, fill = dist)) +
geom_density(alpha=.3)
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)", class = "b")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "yes")
HS_draw_post(Hoop_size_priors)
HS_draw_post(Hoop_size_priors, model_data)
prior_summary(Hoop_size_priors)
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)", class = "b"),
set_prior("student_t(3,0,3)", class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "yes")
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)", class = "b"),
set_prior("student_t(3,0,3)", class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
HS_draw_post(Hoop_size_priors, model_data)
HS_draw_post
draws_df <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
head(draws_df)
draws_df %>%
ggplot(aes(boot::inv.logit(estimate),
colour = `Distance Type`,
fill = `Distance Type`))
draws_df %>%
ggplot(aes(boot::inv.logit(estimate),
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3)
# priors_only model
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)", class = "b"),
set_prior("student_t(3,0,1)", class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
draws_df <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
draws_df %>%
ggplot(aes(boot::inv.logit(estimate),
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3)
summary(Hoop_size_priors)
summary(m1)
prior_summary(m1)
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)", coef = "norm_hoop_pos", class = "b"),
set_prior("student_t(3,0,1)", class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
draws_df <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
draws_df %>%
ggplot(aes(boot::inv.logit(estimate),
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3)
prior_summary(m1)
Hoop_size_m1 <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3,0,3)", class = "b"),
set_prior("student_t(3,0,1)", class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "yes")
summary(Hoop_size_m1)
summary(m1)
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(df = 3,mu = 0, sd = 2)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 2)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
draws_df <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
draws_df %>%
ggplot(aes(boot::inv.logit(estimate),
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3)
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
draws_df <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
draws_df %>%
ggplot(aes(boot::inv.logit(estimate),
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3)
HS_draw_post
draws_df <- close <- min(model_data$norm_hoop_pos)
mid <- median(model_data$norm_hoop_pos)
far <- max(model_data$norm_hoop_pos)
draws_priors <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
draws_priors
HS_draw_post
draws_priors %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop,
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous("Normalised Delta") +
theme_bw()
load("../Analyses/Experiment_3_Hoop_size/data/model_data")
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
sample_prior = "only")
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 2000,
warmup = 1000,
control = list(adapt_delta = .9, max_treedepth = 15),
sample_prior = "only")
summary(Hoop_size_priors)
close <- min(model_data$norm_hoop_pos)
mid <- median(model_data$norm_hoop_pos)
far <- max(model_data$norm_hoop_pos)
draws_priors <- Hoop_size_priors %>%
spread_draws(b_Intercept,
b_norm_hoop_pos) %>%
mutate(hoop_Close = b_Intercept + close * b_norm_hoop_pos,
hoop_Mid = b_Intercept + mid * b_norm_hoop_pos,
hoop_Far = b_Intercept + far * b_norm_hoop_pos) %>%
select(.iteration,
hoop_Close,
hoop_Mid,
hoop_Far) %>%
gather(c(hoop_Close:hoop_Far),
key = "parameter",
value = "estimate") %>%
separate(parameter,
into = c("remove", "Distance Type")) %>%
select(-remove)
draws_priors %>%
mutate(prop = boot::inv.logit(estimate)) %>%
ggplot(aes(prop,
colour = `Distance Type`,
fill = `Distance Type`)) +
geom_density(alpha = .3) +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_x_continuous("Normalised Delta") +
theme_bw()
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 4000,
warmup = 2000,
control = list(adapt_delta = .9, max_treedepth = 15),
sample_prior = "only")
test <- HS_draw_post(Hoop_size_priors, model_data)
test
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 4000,
warmup = 2000,
control = list(adapt_delta = .95, max_treedepth = 15),
sample_prior = "only")
summary(Hoop_size_priors)
# run model
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 1,
chains = 1,
iter = 5000,
warmup = 2500,
control = list(adapt_delta = .95, max_treedepth = 15),
sample_prior = "only")
# run model
Hoop_size_priors <- brm(norm_dist2 ~ norm_hoop_pos + (norm_hoop_pos|participant),
data = model_data,
family = "beta",
prior = c(set_prior("student_t(3, 0, 1)",
coef = "norm_hoop_pos",
class = "b"),
set_prior("student_t(3,0,1)",
class = "Intercept")),
cores = 2,
chains = 2,
iter = 5000,
warmup = 2500,
control = list(adapt_delta = .95, max_treedepth = 15),
sample_prior = "only")
summary(Hoop_size_priors)
draws <- HS_draw_post(Hoop_size_m1, model_data)
draws <- HS_draw_post(Hoop_size_priors, model_data)
draws
