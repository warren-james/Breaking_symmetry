library(gridExtra)
# functions
# function to extract a legend that is shared accross plots
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
# load data
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_data/df_model")
# load function
source("extract_draws_functions/Prob_draws.R")
n_iter <- 2000
n_warmup <- n_iter/2
dir()
dir("../Analyses/Experiment_4_Prob/data/Participants/")
test <- read.csv("../Analyses/Experiment_4_Prob/scratch/new_data/Part_1_data_nar")
head(test)
test <- read.csv("../Analyses/Experiment_4_Prob/scratch/new_data/Part_1_data")
head(test)
test <- load("../Analyses/Experiment_4_Prob/scratch/new_data/Part_1_data")
head(df)
load("../Analyses/Experiment_4_Prob/scratch/new_data/Part_1_data_nar")
head(df)
# load data
load("../Analyses/Experiment_4_Prob/modelling/BRMS/model_data/df_model")
# load function
source("extract_draws_functions/Prob_draws.R")
n_iter <- 2000
n_warmup <- n_iter/2
rm(test)
df %>%
group_by(participant) %>%
mutate(delta = separation/max(separation))
length(unique(df$separation[df$participant == 1],))
length(unique(df$separation[df$participant == 2],))
length(unique(df$separation[df$participant == 3],))
length(unique(df$separation[df$participant == 4],))
d_labels <- c("3", "4.3", "5.8", "7.5", "9.3", "11.1", "12.5", "13.7")
expression(paste(d_labels, degrees))
df %>%
mutate(degs = factor(as.factor(separation), labels = d_labels))
get_VisDegs <- function(separation,distance){
((2*atan2(separation,(2*distance)))*180)/pi
}
# Any constants
Screen_dist <- 54.4
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
# Any constants
Screen_dist <- 54
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 53
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 52
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 52.5
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 52.9
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 52.9
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 54
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
Screen_dist <- 53
ppcm <- 1920/54
df %>%
mutate(degs = get_VisDegs(separation/ppcm, Screen_dist))
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 2))
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(accuracy, separation))
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
unique(test$degs)
Screen_dist <- 53
ppcm <- 1920/54.4
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
unique(test$degs)
Screen_dist <- 54
ppcm <- 1920/54.4
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
unique(test$degs)
Screen_dist <- 54
ppcm <- 1920/55
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
unique(test$degs)
Screen_dist <- 54
ppcm <- 1920/54.4
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
unique(test$degs)
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 2))
unique(test$degs)
Screen_dist <- 53
ppcm <- 1920/54.4
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 2))
unique(test$degs)
Screen_dist <- 53
ppcm <- 1920/54.4
test <- df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1))
unique(test$degs)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10)))) +
facet_wrap(~participant)
library(psyphy)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10)))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F) +
theme_bw() +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F) +
theme_bw() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F) +
theme_bw() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees", degree))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F) +
theme_bw() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F) +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
group_by(participant, separation) %>%
mutate(acc = mean(accuracy)) +
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
geom_point(aes(degs, acc)) +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
group_by(participant, separation) %>%
mutate(acc = mean(accuracy)) +
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
geom_point(aes(x = degs, y = acc)) +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
group_by(participant, separation) %>%
mutate(acc = mean(accuracy)) +
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
geom_point(x = degs, y = acc) +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
group_by(participant, separation) %>%
mutate(acc = mean(accuracy)) +
ggplot(aes(degs, acc)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
geom_point() +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
group_by(participant, separation) %>%
mutate(acc = mean(accuracy)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
geom_point(aes(x = degs, y = acc)) +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
df %>%
mutate(degs = round(get_VisDegs(separation/ppcm, Screen_dist), digits = 1)) %>%
group_by(participant, separation) %>%
mutate(acc = mean(accuracy)) %>%
ggplot(aes(degs, accuracy)) +
geom_smooth(method = "glm",
method.args = list(family = binomial(mafc.logit(10))),
se = F,
colour = "black") +
geom_point(aes(x = degs, y = acc)) +
theme_bw() +
theme(strip.text.x = element_blank()) +
scale_y_continuous("Accuracy", labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Visual Degrees (", degree, ")", sep = ""))) +
facet_wrap(~participant)
rm(list = ls())
# library
library(tidybayes)
library(tidyverse)
library(brms)
library(png)
library(grid)
library(gridExtra)
library(psyphy)
# functions
# function to extract a legend that is shared accross plots
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
load("../Analyses/Experiment_5_Unequal_Reward/scratch/data/model_data")
source("extract_draws_functions/Reward_draws_noint.R")
load("../Analyses/Experiment_5_Unequal_Reward/scratch/df_part1")
head(df_part1)
load("../Analyses/Experiment_5_Unequal_Reward/scratch/data/df_part1")
head(df_part1)
length(unique(df_part1$Slab))
160/8
df_part1 %>%
mutate(Delta = Slab/max(Slab)) %>%
ggplot(aes(Delta, Accuracy)) +
geom_point()
df_part1 %>%
mutate(Delta = Slab/max(Slab)) %>%
ggplot(aes(Delta, Accuracy)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F) +
facet_wrap(~Participant)
df_part1 %>%
mutate(Delta = Slab/max(Slab)) %>%
ggplot(aes(Delta, Accuracy)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
colour = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = ""))) +
theme_bw()
facet_wrap(~Participant)
df_part1 %>%
mutate(Delta = Slab/max(Slab)) %>%
ggplot(aes(Delta, Accuracy)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
colour = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = ""))) +
theme_bw() +
theme(strip.text.x = element_blank()) +
facet_wrap(~Participant)
rm(list = ls())
load("../Analyses/Experiment_2_Two_throw/scratch/df_part1")
head(df_part1)
df_part1 %>%
mutate(delta = slab/max(slab)) %>%
ggplot(aes(delta, acc)) +
geom_point()
df_part1 %>%
mutate(delta = slab/max(slab)) %>%
ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F) +
facet_wrap(~participant) +
theme_bw() +
theme(strip.text.x = element_blank())
df_part1 %>%
mutate(delta = slab/max(slab)) %>%
ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F) +
facet_wrap(~participant, ncol = 6) +
theme_bw() +
theme(strip.text.x = element_blank())
df_part1 %>%
mutate(delta = slab/max(slab)) %>%
ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F) +
scale_y_continuous("Accuracy", labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = ""))) +
facet_wrap(~participant, ncol = 6) +
theme_bw() +
theme(strip.text.x = element_blank())
rm(list = ls())
# load model data
load("../Analyses/Experiment_3_Hoop_size/data/model_data")
# get function for extracting draws
source("extract_draws_functions/Hoop_size_draws.R")
load("../Analyses/Experiment_3_Hoop_size/scratch/beanbagdat")
head(beanbagdat)
str(beanbagdat)
levels(beanbagdat$hoop_size)
head(beanbagdat)
df_part1 %>%
mutate(delta = slab/max(slab)) %>%
ggplot(aes(delta, acc)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F) +
scale_y_continuous("Accuracy", labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = ""))) +
facet_wrap(~participant, ncol = 6) +
theme_bw() +
theme(strip.text.x = element_blank())
beanbagdat %>%
mutate(delta = slab/max(slab),
hoop_size = factor(hoop_size, labels = c("Large", "Small"))) %>%
ggplot(aes(delta, acc, colour = hoop_size)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F) +
facet_wrap(~participant) +
theme_bw() +
theme(strip.text.x = element_blank())
beanbagdat %>%
mutate(delta = slab/max(slab),
hoop_size = factor(hoop_size, labels = c("Large", "Small"))) %>%
ggplot(aes(delta, acc, colour = hoop_size)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
fullrange = T) +
facet_wrap(~participant) +
theme_bw() +
theme(strip.text.x = element_blank())
beanbagdat %>%
mutate(delta = slab/max(slab),
hoop_size = factor(hoop_size, labels = c("Large", "Small"))) %>%
ggplot(aes(delta, acc, colour = hoop_size)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
fullrange = T) +
facet_wrap(~participant, ncol = 3) +
theme_bw() +
theme(strip.text.x = element_blank())
beanbagdat %>%
mutate(delta = slab/max(slab),
hoop_size = factor(hoop_size, labels = c("Large", "Small"))) %>%
ggplot(aes(delta, acc, colour = hoop_size)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
fullrange = T) +
facet_wrap(~participant, ncol = 3) +
theme_bw() +
theme(strip.text.x = element_blank())
beanbagdat %>%
mutate(delta = slab/max(slab),
hoop_size = factor(hoop_size, labels = c("Large", "Small"))) %>%
ggplot(aes(delta, acc, colour = hoop_size)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
fullrange = T) +
facet_wrap(~participant, ncol = 7) +
theme_bw() +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = ""))) +
scale_y_continuous("Accuracy", labels = scales::percent_format(accuracy = 1)) +
guides(colour = guide_legend("Hoop Size")) +
theme(strip.text.x = element_blank())
beanbagdat %>%
mutate(delta = slab/max(slab),
hoop_size = factor(hoop_size, labels = c("Large", "Small"))) %>%
ggplot(aes(delta, acc, colour = hoop_size)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
fullrange = T) +
facet_wrap(~participant, ncol = 7) +
theme_bw() +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = "")),
breaks = seq(0,1,.5)) +
scale_y_continuous("Accuracy", labels = scales::percent_format(accuracy = 1)) +
guides(colour = guide_legend("Hoop Size")) +
theme(strip.text.x = element_blank())
load("../Analyses/Experiment_5_Unequal_Reward/scratch/data/model_data")
source("extract_draws_functions/Reward_draws_noint.R")
load("../Analyses/Experiment_5_Unequal_Reward/scratch/df_part1")
df_part1 %>%
mutate(Delta = Slab/max(Slab)) %>%
ggplot(aes(Delta, Accuracy)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = F,
colour = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(expression(paste("Hoop Delta (", Delta, ")", sep = ""))) +
theme_bw() +
theme(strip.text.x = element_blank()) +
facet_wrap(~Participant)
head(df_part1)
load("../Analyses/Experiment_5_Unequal_Reward/scratch/df_part1")
rm(list = ls())
load("../Analyses/Experiment_5_Unequal_Reward/scratch/df_part1")
load("../Analyses/Experiment_5_Unequal_Reward/scratch/data/df_part1")
